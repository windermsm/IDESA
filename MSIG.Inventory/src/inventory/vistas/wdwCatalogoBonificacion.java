package inventory.vistas;

import inventory.acceso.AccesoBonificacion;
import inventory.acceso.AccesoExcepciones;
import inventory.acceso.AccesoProducto;
import inventory.acceso.AccesoUsuario;
import inventory.objetos.ObjetosBonificacion;
import inventory.objetos.ObjetosUsuario;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

public class wdwCatalogoBonificacion extends javax.swing.JInternalFrame {

    /**
     * Creates new form wdwIngresoClientes
     */
    public wdwCatalogoBonificacion() {
        initComponents();
        mostrarRegistrosGuardados();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlEncabezado = new javax.swing.JPanel();
        lblIdBonificacion = new javax.swing.JLabel();
        txtIdBonificacion = new javax.swing.JTextField();
        lblDescripcion = new javax.swing.JLabel();
        lblEstado = new javax.swing.JLabel();
        lblCantidad = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JTextField();
        txtDescripcion = new javax.swing.JTextField();
        lblPorcentaje = new javax.swing.JLabel();
        txtPorcentaje = new javax.swing.JTextField();
        cbxEstado = new javax.swing.JComboBox();
        lblCantidad1 = new javax.swing.JLabel();
        cbxTipoEmpleado = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        txtIdProducto = new javax.swing.JTextField();
        txtDescripcionProducto = new javax.swing.JTextField();
        btnBuscarProducto = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        pnlBotones = new javax.swing.JPanel();
        lblBuscar = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();
        btnLimpiar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        pnlDetalle = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBonificacion = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Bonificaciones");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/imgCatalogoBonificaciones.png"))); // NOI18N
        setMaximumSize(new java.awt.Dimension(700, 500));
        setMinimumSize(new java.awt.Dimension(700, 500));
        setPreferredSize(new java.awt.Dimension(700, 500));

        pnlEncabezado.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblIdBonificacion.setText("ID Bonificacion");

        txtIdBonificacion.setEditable(false);
        txtIdBonificacion.setBackground(new java.awt.Color(102, 102, 102));
        txtIdBonificacion.setForeground(new java.awt.Color(255, 255, 255));
        txtIdBonificacion.setToolTipText("Este campo no se puede editar el programa asigana automaticamente un numero de ID");

        lblDescripcion.setText("Descripcion");

        lblEstado.setText("Estado");

        lblCantidad.setText("Cantidad");

        txtCantidad.setToolTipText("Ingrese una cantidad de bonificacion");

        txtDescripcion.setToolTipText("Ingrese el nombre de esta bonificacion");
        txtDescripcion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDescripcionFocusGained(evt);
            }
        });

        lblPorcentaje.setText("Bonificaci√≥n");

        txtPorcentaje.setToolTipText("Ingrese el porcentaje de la bonificacion");

        cbxEstado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Activa", "Cancelada" }));
        cbxEstado.setToolTipText("");

        lblCantidad1.setText("Tipo Empleado");

        cbxTipoEmpleado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Administrador", "Jefe Sucursal", "Secretaria", "Cajero", "Tecnico", "Vendedor" }));

        jLabel1.setText("Producto");

        txtIdProducto.setEditable(false);
        txtIdProducto.setBackground(new java.awt.Color(102, 102, 102));
        txtIdProducto.setForeground(new java.awt.Color(255, 255, 255));

        txtDescripcionProducto.setEditable(false);
        txtDescripcionProducto.setBackground(new java.awt.Color(102, 102, 102));
        txtDescripcionProducto.setForeground(new java.awt.Color(255, 255, 255));

        btnBuscarProducto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/imgBotonBuscar.png"))); // NOI18N
        btnBuscarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarProductoActionPerformed(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("* Valor en Quetzales");

        javax.swing.GroupLayout pnlEncabezadoLayout = new javax.swing.GroupLayout(pnlEncabezado);
        pnlEncabezado.setLayout(pnlEncabezadoLayout);
        pnlEncabezadoLayout.setHorizontalGroup(
            pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEncabezadoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblEstado)
                    .addComponent(lblIdBonificacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addComponent(lblCantidad1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20)
                .addGroup(pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbxTipoEmpleado, javax.swing.GroupLayout.Alignment.TRAILING, 0, 133, Short.MAX_VALUE)
                    .addComponent(cbxEstado, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtIdBonificacion)
                    .addComponent(txtIdProducto, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlEncabezadoLayout.createSequentialGroup()
                        .addComponent(txtDescripcionProducto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscarProducto))
                    .addGroup(pnlEncabezadoLayout.createSequentialGroup()
                        .addGroup(pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblDescripcion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblCantidad, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlEncabezadoLayout.createSequentialGroup()
                                .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblPorcentaje)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtPorcentaje, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txtDescripcion))))
                .addContainerGap())
        );
        pnlEncabezadoLayout.setVerticalGroup(
            pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEncabezadoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIdBonificacion)
                    .addComponent(txtIdBonificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDescripcion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCantidad)
                    .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEstado)
                    .addComponent(cbxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPorcentaje)
                    .addComponent(txtPorcentaje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxTipoEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCantidad1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtIdProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)
                        .addComponent(txtDescripcionProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnBuscarProducto))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlBotones.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblBuscar.setText("Buscar");

        txtBuscar.setToolTipText("Ingrese la descripcion de la bonificacion a buscar");

        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/imgBotonLimpiar.png"))); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.setToolTipText("");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/imgBotonEditar.png"))); // NOI18N
        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/imgBotonGuardar.png"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/imgBotonBuscar.png"))); // NOI18N
        btnBuscar.setActionCommand("buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBotonesLayout = new javax.swing.GroupLayout(pnlBotones);
        pnlBotones.setLayout(pnlBotonesLayout);
        pnlBotonesLayout.setHorizontalGroup(
            pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBotonesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblBuscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBuscar)
                .addGap(97, 97, 97)
                .addComponent(btnGuardar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnModificar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLimpiar)
                .addContainerGap())
        );
        pnlBotonesLayout.setVerticalGroup(
            pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBotonesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBuscar, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblBuscar)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnLimpiar)
                        .addComponent(btnModificar)
                        .addComponent(btnGuardar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlDetalle.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tblBonificacion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblBonificacion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBonificacionMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblBonificacion);

        javax.swing.GroupLayout pnlDetalleLayout = new javax.swing.GroupLayout(pnlDetalle);
        pnlDetalle.setLayout(pnlDetalleLayout);
        pnlDetalleLayout.setHorizontalGroup(
            pnlDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDetalleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 840, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlDetalleLayout.setVerticalGroup(
            pnlDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDetalleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlEncabezado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlBotones, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlDetalle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlEncabezado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlBotones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlDetalle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //VARIABLES GLOBALES
    AccesoExcepciones Mensaje = new AccesoExcepciones();
    AccesoBonificacion NuevaBonificacion = new AccesoBonificacion();
    AccesoProducto acceso_producto = new AccesoProducto();
    ObjetosBonificacion Bonificacion = new ObjetosBonificacion();
    AccesoUsuario nuevoUsuario = new AccesoUsuario();
    ObjetosUsuario usuario = new ObjetosUsuario();
    boolean bonificacion_encontrado = false;

    private void limpiarCampos() {

        btnGuardar.setEnabled(true);
        txtIdBonificacion.setText("");
        txtDescripcion.setText("");
        cbxEstado.setSelectedItem("Activa");
        txtCantidad.setText("");
        txtPorcentaje.setText("");
        bonificacion_encontrado = false;
        txtIdProducto.setText("");
        txtDescripcionProducto.setText("");
        
    }
    
    private void cargaEmpleados(){
        ArrayList<ObjetosUsuario> lUsuarios = new ArrayList();
            
        try{
            lUsuarios = nuevoUsuario.retornaNombreEmpleados(Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText());
            
        }catch(Exception error){
            Mensaje.manipulacionExcepciones("critico", error.getMessage(), "Retorna Nombre Empleados");
        }
        
        // Lleno el combobox con los registros de empleados que existen
        for(ObjetosUsuario xUsuario : lUsuarios){
            cbxTipoEmpleado.addItem(xUsuario.getNombre_empleado());
        }
        
    }

    private void mostrarRegistrosGuardados() {

        String busqueda = txtBuscar.getText();
        
        DefaultTableModel tabla = new DefaultTableModel();
        ArrayList<ObjetosBonificacion> listaBonificaciones = new ArrayList();

        try {
            listaBonificaciones = NuevaBonificacion.seleccionarBonificacion(busqueda, Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText());
        } catch (Error error) {
            Mensaje.manipulacionExcepciones("critico", error.getMessage(), "Seleccionar Bonificacion");
        }
        
        if (listaBonificaciones.isEmpty()) {
            
            Mensaje.manipulacionExcepciones("critico", "No existen datos almacenados de bonificaciones.", "Mostrar Registros Guardados");
        
        } else {
            
            tabla.addColumn("ID Bonificacion");
            tabla.addColumn("Descripcion");
            tabla.addColumn("Estado");
            tabla.addColumn("cantidad");
            tabla.addColumn("Porcentaje");
            tabla.addColumn("Tipo Empleado");
            tabla.addColumn("ID Producto");
            tabla.setRowCount(listaBonificaciones.size());
            int cCliente = 0;

            for (ObjetosBonificacion xBonif : listaBonificaciones) {
                tabla.setValueAt(xBonif.getId_bonificacion(), cCliente, 0);
                tabla.setValueAt(xBonif.getDescripcion_bonificacion(), cCliente, 1);
                tabla.setValueAt(xBonif.getEstado_bonificacion(), cCliente, 2);
                tabla.setValueAt(xBonif.getCantidad_bonificacion(), cCliente, 3);
                tabla.setValueAt(xBonif.getPorcentaje_bonificacion(), cCliente, 4);
                tabla.setValueAt(xBonif.getTipo_empleado(), cCliente, 5);
                tabla.setValueAt(xBonif.getId_producto(), cCliente, 6);
                cCliente++;
            }

            tblBonificacion.setModel(tabla);
        }
    }

    private int obtenerIdBonificacion(String pDescripcion) {

        int id = 0;
        ArrayList<ObjetosBonificacion> BuscarBonificacion = new ArrayList();

        try {
            BuscarBonificacion = NuevaBonificacion.buscarBonificacion(pDescripcion, Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText());
        } catch (Exception error) {
            Mensaje.manipulacionExcepciones("critico", error.getMessage(), "Buscar Bonificacion");
        }

        if (BuscarBonificacion.isEmpty()) {
            Mensaje.manipulacionExcepciones("critico", "No existe esta bonificacion en la Base de Datos", "Mostrar Registros Guardados");
        } else {
            id = BuscarBonificacion.get(0).getId_bonificacion();
        }

        return id;
    }

    private void buscarEnRegistrosGuardados() {

        String busqueda = txtBuscar.getText();
        
        DefaultTableModel tabla = new DefaultTableModel();
        ArrayList<ObjetosBonificacion> listaBonificaciones = new ArrayList();
        
        if (busqueda != null) {
            try {
                listaBonificaciones = NuevaBonificacion.seleccionarBonificacion(busqueda, Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText());
            } catch (Error error) {
                Mensaje.manipulacionExcepciones("critico", error.getMessage(), "Seleccionar Bonificacion");
            }

        }
        
        if (listaBonificaciones.isEmpty()) {
            
            Mensaje.manipulacionExcepciones("critico", "No existen datos almacenados de bonificaciones.", "Mostrar Registros Guardados");
        
        } else {
            
            tabla.addColumn("ID Bonificacion");
            tabla.addColumn("Descripcion");
            tabla.addColumn("Estado");
            tabla.addColumn("cantidad");
            tabla.addColumn("Porcentaje");
            tabla.addColumn("Tipo Empleado");
            tabla.addColumn("ID Producto");
            tabla.setRowCount(listaBonificaciones.size());
            int cCliente = 0;

            for (ObjetosBonificacion xBonif : listaBonificaciones) {
                tabla.setValueAt(xBonif.getId_bonificacion(), cCliente, 0);
                tabla.setValueAt(xBonif.getDescripcion_bonificacion(), cCliente, 1);
                tabla.setValueAt(xBonif.getEstado_bonificacion(), cCliente, 2);
                tabla.setValueAt(xBonif.getCantidad_bonificacion(), cCliente, 3);
                tabla.setValueAt(xBonif.getPorcentaje_bonificacion(), cCliente, 4);
                tabla.setValueAt(xBonif.getTipo_empleado(), cCliente, 5);
                tabla.setValueAt(xBonif.getId_producto(), cCliente, 6);
                cCliente++;
            }

            tblBonificacion.setModel(tabla);
        }

    }

    private boolean verificarDatos() {

        boolean vDatosCorrectos = true;

        if (txtCantidad.getText().isEmpty()) {
            Mensaje.manipulacionExcepciones("critico", "Ingrese la Cantidad para hacer efectiva la Bonificacion,", "Verificar Datos");
            vDatosCorrectos = false;
        }
        
        if (txtPorcentaje.getText().isEmpty()) {
            Mensaje.manipulacionExcepciones("critico", "Ingrese el valor de la Bonificacion.", "Verificar Datos");
        }

        return vDatosCorrectos;
    }

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if (verificarDatos()) {
            Bonificacion.setId_bonificacion(0);
            Bonificacion.setDescripcion_bonificacion(txtDescripcion.getText());
            Bonificacion.setCantidad_bonificacion(Float.parseFloat(txtCantidad.getText()));
            Bonificacion.setEstado_bonificacion(cbxEstado.getSelectedItem().toString());
            Bonificacion.setPorcentaje_bonificacion(Float.parseFloat(txtPorcentaje.getText()));
            Bonificacion.setTipo_empleado(cbxTipoEmpleado.getSelectedItem().toString());
            Bonificacion.setId_producto(txtIdProducto.getText());
            try {
                NuevaBonificacion.insertarBonificacion(Bonificacion, Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText());
                limpiarCampos();
                buscarEnRegistrosGuardados();
            } catch (Exception error) {
                Mensaje.manipulacionExcepciones("critico", error.getMessage(), "Guardar");
            }
        }

    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        limpiarCampos();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        buscarEnRegistrosGuardados();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        Bonificacion.setId_bonificacion(Integer.parseInt(txtIdBonificacion.getText()));
        Bonificacion.setDescripcion_bonificacion(txtDescripcion.getText());
        Bonificacion.setCantidad_bonificacion(Float.parseFloat(txtCantidad.getText()));
        Bonificacion.setEstado_bonificacion(cbxEstado.getSelectedItem().toString());
        Bonificacion.setPorcentaje_bonificacion(Float.parseFloat(txtPorcentaje.getText()));
        Bonificacion.setTipo_empleado(cbxTipoEmpleado.getSelectedItem().toString());
        Bonificacion.setId_producto(txtIdProducto.getText());
        try {
            Mensaje.manipulacionExcepciones("informacion", NuevaBonificacion.actualizarBonificacion(Bonificacion, Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText()), "Actualiza Bonificacion");
            limpiarCampos();
        } catch (Exception error) {
            Mensaje.manipulacionExcepciones("critico", error.getMessage(), "Actualizar Bonificacion");
        }
        mostrarRegistrosGuardados();
    }//GEN-LAST:event_btnModificarActionPerformed

    private String Log = "";
    private void agregarLog(String texto) {
        this.Log = this.Log + "VENTA" + ": " + texto + " \n";
        Inventory.txtLog.setText(Log);
    }
    
    private void tblBonificacionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBonificacionMouseClicked
        btnGuardar.setEnabled(false);
        txtIdBonificacion.setText(tblBonificacion.getValueAt(tblBonificacion.getSelectedRow(), 0).toString());
        txtDescripcion.setText(String.valueOf(tblBonificacion.getValueAt(tblBonificacion.getSelectedRow(), 1)));
        cbxEstado.setSelectedItem(String.valueOf(tblBonificacion.getValueAt(tblBonificacion.getSelectedRow(), 2)));
        txtCantidad.setText(String.valueOf(tblBonificacion.getValueAt(tblBonificacion.getSelectedRow(), 3)));
        txtPorcentaje.setText(String.valueOf(tblBonificacion.getValueAt(tblBonificacion.getSelectedRow(), 4)));
        cbxTipoEmpleado.setSelectedItem(tblBonificacion.getValueAt(tblBonificacion.getSelectedRow(), 5).toString());
        txtIdProducto.setText(tblBonificacion.getValueAt(tblBonificacion.getSelectedRow(), 6).toString());
        try {
            txtDescripcionProducto.setText(acceso_producto.buscarDescripcion(txtIdProducto.getText(), Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText()));
        } catch(Exception Error) {
            agregarLog("Error al buscar Producto. \n" + Error.toString());
        }
    }//GEN-LAST:event_tblBonificacionMouseClicked

    private void txtDescripcionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDescripcionFocusGained
        /*
         * if (txtDescripcion.getText().isEmpty()) {
         * txtDescripcion.requestFocus();
         * Mensaje.manipulacionExcepciones("critico", "Ingrese una descripcion
         * de la bonificacion");
        }
         */
    }//GEN-LAST:event_txtDescripcionFocusGained

    private void btnBuscarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarProductoActionPerformed
        wdwConsultaProductos ConsultaProductos = new wdwConsultaProductos("Catalogo Bonificaciones");
        int ancho = Inventory.pnlPrincipal.getWidth();
        int alto = Inventory.pnlPrincipal.getHeight();
        int x = (ancho / 2) - (ConsultaProductos.getWidth() / 2);
        int y = ((alto / 2) - (ConsultaProductos.getHeight() / 2)) / 2;
        ConsultaProductos.setVisible(true);
        Inventory.pnlPrincipal.add(ConsultaProductos);
        ConsultaProductos.toFront();
        ConsultaProductos.setLocation(x, y);
        wdwConsultaProductos.btnAgregarEquipo.setEnabled(true);
    }//GEN-LAST:event_btnBuscarProductoActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnBuscarProducto;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JComboBox cbxEstado;
    private javax.swing.JComboBox cbxTipoEmpleado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBuscar;
    private javax.swing.JLabel lblCantidad;
    private javax.swing.JLabel lblCantidad1;
    private javax.swing.JLabel lblDescripcion;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JLabel lblIdBonificacion;
    private javax.swing.JLabel lblPorcentaje;
    private javax.swing.JPanel pnlBotones;
    private javax.swing.JPanel pnlDetalle;
    private javax.swing.JPanel pnlEncabezado;
    private javax.swing.JTable tblBonificacion;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtDescripcion;
    public static javax.swing.JTextField txtDescripcionProducto;
    private javax.swing.JTextField txtIdBonificacion;
    public static javax.swing.JTextField txtIdProducto;
    private javax.swing.JTextField txtPorcentaje;
    // End of variables declaration//GEN-END:variables
}
