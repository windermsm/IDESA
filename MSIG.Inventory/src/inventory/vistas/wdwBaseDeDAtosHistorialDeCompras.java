package inventory.vistas;

import inventory.acceso.*;
import inventory.objetos.ObjetosCompra;
import inventory.objetos.ObjetosListaProducto;
import inventory.objetos.ObjetosSucursal;
import java.awt.Dimension;
import java.net.URL;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import javax.swing.JInternalFrame;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.swing.JRViewer;

public class wdwBaseDeDAtosHistorialDeCompras extends javax.swing.JInternalFrame {

    /**
     * Creates new form wdwBaseDeDAtosHistorialDeCompras
     */
    public wdwBaseDeDAtosHistorialDeCompras() {
        initComponents();
        System.out.println(Inventory.lblRol.getText());
        if (Inventory.lblRol.getText().equals("Administrador") || Inventory.lblRol.getText().equals("Jefe Sucursal")) {
            btnReporte.setEnabled(true);
        } else {
            btnReporte.setEnabled(false);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    //VARIABLE GLOBALES
    AccesoCompra NuevaCompra = new AccesoCompra();
    AccesoExcepciones Mensaje = new AccesoExcepciones();
    
     private void mostrarRegistrosGuardados(String pFecha_incial , String pFecha_final){
        
        DefaultTableModel tabla = new DefaultTableModel();
        
        ArrayList<ObjetosCompra> listaCompras = new ArrayList();
        
        try{
            listaCompras = NuevaCompra.seleccionarCompraFecha(pFecha_incial, pFecha_final, Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText());
        }catch(Error error){
            Mensaje.manipulacionExcepciones("critico", error.getMessage(), "Seleccionar Compra Fecha");
        }
        
        //MOSTRAR LA INFORMACION DE LAS FACTURAS EN LA VITAS
        if(listaCompras.isEmpty()){
            Mensaje.manipulacionExcepciones("critico", "No existen datos almacenados de las compras", "Lista Compras");
        } else {
            tabla.addColumn("ID Compra");
            tabla.addColumn("No. Factura");
            tabla.addColumn("Serie");
            tabla.addColumn("Folio");
            tabla.addColumn("ID Proveedor");
            tabla.addColumn("Fecha");
            tabla.addColumn("Total");
            tabla.setRowCount(listaCompras.size());
            int cCompra = 0;
            
            for (ObjetosCompra xCompra : listaCompras) {
                tabla.setValueAt(xCompra.getId_compra(), cCompra, 0);
                tabla.setValueAt(xCompra.getNumero_factura_compra(), cCompra, 1);
                tabla.setValueAt(xCompra.getSerie_factura_compra(), cCompra, 2);
                tabla.setValueAt(xCompra.getFolio_factura_compra(), cCompra, 3);
                tabla.setValueAt(xCompra.getId_proveedor(), cCompra, 4);
                tabla.setValueAt(xCompra.getFecha_factura_compra(), cCompra, 5);
                tabla.setValueAt(xCompra.getTotal_factura_compra(), cCompra, 6);
                cCompra++;
            }
            
            tblDetalleCompra.setModel(tabla);
        }
    }
    
     
     private void mostrarRegistrosGuardadosFEL(String serie , String numero){
        
        DefaultTableModel tabla = new DefaultTableModel();
        
        ArrayList<ObjetosCompra> listaCompras = new ArrayList();
        
        try{
            listaCompras = NuevaCompra.seleccionarCompraFEL(serie, numero, Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText());
        }catch(Error error){
            Mensaje.manipulacionExcepciones("critico", error.getMessage(), "Seleccionar Compra Fecha");
        }
        
        //MOSTRAR LA INFORMACION DE LAS FACTURAS EN LA VITAS
        if(listaCompras.isEmpty()){
            Mensaje.manipulacionExcepciones("critico", "No existen datos almacenados de las compras", "Lista Compras");
        } else {
            tabla.addColumn("ID Compra");
            tabla.addColumn("No. Factura");
            tabla.addColumn("Serie");
            tabla.addColumn("Folio");
            tabla.addColumn("ID Proveedor");
            tabla.addColumn("Fecha");
            tabla.addColumn("Total");
            tabla.setRowCount(listaCompras.size());
            int cCompra = 0;
            
            for (ObjetosCompra xCompra : listaCompras) {
                tabla.setValueAt(xCompra.getId_compra(), cCompra, 0);
                tabla.setValueAt(xCompra.getNumero_factura_compra(), cCompra, 1);
                tabla.setValueAt(xCompra.getSerie_factura_compra(), cCompra, 2);
                tabla.setValueAt(xCompra.getFolio_factura_compra(), cCompra, 3);
                tabla.setValueAt(xCompra.getId_proveedor(), cCompra, 4);
                tabla.setValueAt(xCompra.getFecha_factura_compra(), cCompra, 5);
                tabla.setValueAt(xCompra.getTotal_factura_compra(), cCompra, 6);
                cCompra++;
            }
            
            tblDetalleCompra.setModel(tabla);
        }
    }
     
     
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBotones = new javax.swing.JPanel();
        lblIdCompra = new javax.swing.JLabel();
        txtIdCompra = new javax.swing.JTextField();
        btnReporte = new javax.swing.JButton();
        lblHasta = new javax.swing.JLabel();
        lblFecha = new javax.swing.JLabel();
        btnMostrar = new javax.swing.JButton();
        txtFechaInicial = new com.toedter.calendar.JDateChooser();
        txtFechaFinal = new com.toedter.calendar.JDateChooser();
        btnSerie3 = new javax.swing.JButton();
        txtSerie = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtNumero = new javax.swing.JTextField();
        btnMostrar1 = new javax.swing.JButton();
        pnlDetalle = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDetalleCompra = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Historial de Compras");
        setToolTipText("");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/historialCompras.png"))); // NOI18N

        pnlBotones.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblIdCompra.setText("ID Compra");

        txtIdCompra.setBackground(new java.awt.Color(255, 255, 204));
        txtIdCompra.setToolTipText("Ingrese el ID de la compra que se genero al crear la compra o seleccionela del listado");

        btnReporte.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/imgBotonImpresoraLaser.png"))); // NOI18N
        btnReporte.setActionCommand("btnReporte");
        btnReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReporteActionPerformed(evt);
            }
        });

        lblHasta.setText("Hasta");

        lblFecha.setText("Desde");

        btnMostrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/imgBotonBuscar.png"))); // NOI18N
        btnMostrar.setText("Buscar");
        btnMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarActionPerformed(evt);
            }
        });

        txtFechaInicial.setBackground(new java.awt.Color(240, 240, 204));
        txtFechaInicial.setToolTipText("Ingrese la Fecha Inicial.");
        txtFechaInicial.setDateFormatString("yyyy-MM-dd");
        txtFechaInicial.setMaximumSize(new java.awt.Dimension(120, 20));
        txtFechaInicial.setMinimumSize(new java.awt.Dimension(120, 20));
        txtFechaInicial.setPreferredSize(new java.awt.Dimension(120, 20));

        txtFechaFinal.setBackground(new java.awt.Color(240, 240, 204));
        txtFechaFinal.setToolTipText("Ingrese la Fecha Final.");
        txtFechaFinal.setDateFormatString("yyyy-MM-dd");
        txtFechaFinal.setMaximumSize(new java.awt.Dimension(120, 20));
        txtFechaFinal.setMinimumSize(new java.awt.Dimension(120, 20));
        txtFechaFinal.setPreferredSize(new java.awt.Dimension(120, 20));

        btnSerie3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/imgBotonCodigoDeBarraMini.png"))); // NOI18N
        btnSerie3.setActionCommand("btnReporte");
        btnSerie3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSerie3ActionPerformed(evt);
            }
        });

        jLabel1.setText("FEL");

        btnMostrar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/imgBotonBuscar.png"))); // NOI18N
        btnMostrar1.setText("Buscar");
        btnMostrar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBotonesLayout = new javax.swing.GroupLayout(pnlBotones);
        pnlBotones.setLayout(pnlBotonesLayout);
        pnlBotonesLayout.setHorizontalGroup(
            pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBotonesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblIdCompra)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtIdCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnReporte)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSerie3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFecha)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtFechaInicial, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .addComponent(txtSerie))
                .addGap(26, 26, 26)
                .addComponent(lblHasta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtFechaFinal, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .addComponent(txtNumero))
                .addGap(18, 18, 18)
                .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnMostrar)
                    .addComponent(btnMostrar1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        pnlBotonesLayout.setVerticalGroup(
            pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBotonesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtFechaFinal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblFecha, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblIdCompra)
                        .addComponent(txtIdCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnReporte, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSerie3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblHasta, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnMostrar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtFechaInicial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSerie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(btnMostrar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlDetalle.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tblDetalleCompra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Compra", "Num. Factura", "Serie", "Folio", "ID Proveedor", "Fecha", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDetalleCompra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDetalleCompraMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDetalleCompra);

        javax.swing.GroupLayout pnlDetalleLayout = new javax.swing.GroupLayout(pnlDetalle);
        pnlDetalle.setLayout(pnlDetalleLayout);
        pnlDetalleLayout.setHorizontalGroup(
            pnlDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDetalleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 940, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlDetalleLayout.setVerticalGroup(
            pnlDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDetalleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlBotones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlDetalle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlBotones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlDetalle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarActionPerformed
        if (txtFechaInicial.getDate().toString().equals("") || txtFechaFinal.getDate().toString().equals("")) {
            Mensaje.manipulacionExcepciones("critico", "Por favor ingrese un rango de fechas.", "Boton Mostrar");
        } else {
            String desde = ( txtFechaInicial.getDate().getYear() + 1900 ) + "-" + ( txtFechaInicial.getDate().getMonth() + 1 ) + "-" + txtFechaInicial.getDate().getDate();
            String hasta = ( txtFechaFinal.getDate().getYear() + 1900 ) + "-" + ( txtFechaFinal.getDate().getMonth() + 1 ) + "-" + txtFechaFinal.getDate().getDate();
            mostrarRegistrosGuardados(desde, hasta);
        }
    }//GEN-LAST:event_btnMostrarActionPerformed

    private void tblDetalleCompraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDetalleCompraMouseClicked

        if (String.valueOf(tblDetalleCompra.getSelectedColumn()).equals("0")) {
            int fila_seleccionada = tblDetalleCompra.getSelectedRow();
            txtIdCompra.setText(tblDetalleCompra.getValueAt(fila_seleccionada, 0).toString());
        }
    }//GEN-LAST:event_tblDetalleCompraMouseClicked

    private void btnReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReporteActionPerformed
        
        try{
            
            AccesoInventario acceso_inventario = new AccesoInventario();
            AccesoSucursal acceso_sucursal = new AccesoSucursal();
            ObjetosSucursal objeto_sucursal = new ObjetosSucursal();
            
            URL url_reporte = this.getClass().getResource("/inventory/reportes/rptCompra.jasper");
            JasperReport reporte = (JasperReport) JRLoader.loadObject(url_reporte);
            HashMap parametro = new HashMap();
            
            //parametros generales del encabezado
            objeto_sucursal = acceso_sucursal.buscarSucursales(1, Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText());
            
            //parametros del reporte
            parametro.put("P_ID_COMPRA", Integer.parseInt(txtIdCompra.getText()));
            parametro.put("P_DIRECCION_SUCURSAL", objeto_sucursal.getDireccion_sucursal());
            parametro.put("P_NIT", objeto_sucursal.getNit_sucursal());
            parametro.put("P_NOMBRE_EMPRESA", objeto_sucursal.getNombre_sucursal());
            parametro.put("P_SUCURSAL", objeto_sucursal.getDescripcion_sucursal());
            parametro.put("P_TELEFONO", objeto_sucursal.getTelefonos_sucursal());

            //parametros facturación FEL implementarlos solo si se desea
            //obtener facturacion electronica de la venta realizada
            /*parametro.put("P_SERIE_FEL", tblDetalleCompra.getValueAt(tblDetalleCompra.getSelectedRow(), 2).toString());
            parametro.put("P_NUMERO_FEL", tblDetalleCompra.getValueAt(tblDetalleCompra.getSelectedRow(), 1).toString());
            parametro.put("P_AUTORIZACION_FEL", tblDetalleCompra.getValueAt(tblDetalleCompra.getSelectedRow(), 3).toString());*/
            
            JasperPrint pantalla = JasperFillManager.fillReport(reporte, parametro, acceso_inventario.conectar());
            JInternalFrame ventana = new JInternalFrame("Inventory 3.0");
            ventana.getContentPane().add(new JRViewer(pantalla));
            ventana.setPreferredSize(new Dimension(900, 500));
            ventana.setClosable(true);
            ventana.setMaximizable(true);
            ventana.setResizable(true);
            ventana.setVisible(true);
            ventana.pack();
            
            int ancho = java.awt.Toolkit.getDefaultToolkit().getScreenSize().width;
            int alto = java.awt.Toolkit.getDefaultToolkit().getScreenSize().height;
            int x  = (ancho  - ventana.getWidth() ) / 2;
            int y  = ( alto - ventana.getHeight() - 100 ) / 2;
            
            Inventory.pnlPrincipal.add(ventana);
            
            ventana.setLocation(x, y);
            ventana.setVisible(true);
            ventana.toFront();
            
        } catch (JRException error) {
            Mensaje.manipulacionExcepciones("critico", error.getMessage(), "Reporte de Compra");
        }
        
    }//GEN-LAST:event_btnReporteActionPerformed

    private void btnSerie3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSerie3ActionPerformed
        
        this.toBack();
        
        if (txtIdCompra.getText().isEmpty()) {
            Mensaje.manipulacionExcepciones("critico", "Debe elegir el ID de la Compra que desea visualizar.", "Serie");
        } else {

            String id_compra = txtIdCompra.getText();
            
            //Armar el listado de productos
            ArrayList<ObjetosListaProducto> listado_productos = new ArrayList<>();
            AccesoDetalleCompra acceso_detalle_compra =  new AccesoDetalleCompra();
            listado_productos = acceso_detalle_compra.seleccionarDetallePorCompra(id_compra, Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText());
            Iterator iterador_compra = listado_productos.iterator();
            
            //Llamar pantalla para el ingreso de series      
            wdwCatalogoSerie Serie = new wdwCatalogoSerie(listado_productos, txtIdCompra.getText(), "0", "0", "Compra");
            int ancho = Inventory.pnlPrincipal.getWidth();
            int alto = Inventory.pnlPrincipal.getHeight();
            int x = (ancho / 2) - (Serie.getWidth() / 2);
            int y = (alto / 2) - (Serie.getHeight() / 2);
            Serie.setVisible(true);
            Inventory.pnlPrincipal.add(Serie);
            Serie.toFront();
            Serie.setLocation(x, y);
        }
        
    }//GEN-LAST:event_btnSerie3ActionPerformed

    private void btnMostrar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrar1ActionPerformed
        if (txtSerie.getText().equals("") || txtNumero.getText().equals("")) {
            Mensaje.manipulacionExcepciones("critico", "Por favor ingrese el Número y la Serie.", "Boton Buscar");
        } else {
            mostrarRegistrosGuardadosFEL(txtSerie.getText(), txtNumero.getText());
        }
    }//GEN-LAST:event_btnMostrar1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMostrar;
    private javax.swing.JButton btnMostrar1;
    private javax.swing.JButton btnReporte;
    private javax.swing.JButton btnSerie3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblHasta;
    private javax.swing.JLabel lblIdCompra;
    private javax.swing.JPanel pnlBotones;
    private javax.swing.JPanel pnlDetalle;
    private javax.swing.JTable tblDetalleCompra;
    private com.toedter.calendar.JDateChooser txtFechaFinal;
    private com.toedter.calendar.JDateChooser txtFechaInicial;
    private javax.swing.JTextField txtIdCompra;
    private javax.swing.JTextField txtNumero;
    private javax.swing.JTextField txtSerie;
    // End of variables declaration//GEN-END:variables
}
