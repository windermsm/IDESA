/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package inventory.vistas;

import com.toedter.calendar.JDateChooser;
import inventory.acceso.AccesoExcepciones;
import inventory.acceso.AccesoGarantia;
import inventory.acceso.AccesoGarantiaProveedor;
import inventory.acceso.AccesoInventario;
import inventory.acceso.AccesoSucursal;
import inventory.objetos.ObjetoGarantiaProveedor;
import inventory.objetos.ObjetosSucursal;
import java.awt.Color;
import java.awt.Dimension;
import java.net.URL;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import javax.swing.JInternalFrame;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.swing.JRViewer;

/**
 *
 * @author FERNANDO
 */
public class wdwMovimientoGarantiaProveedor extends javax.swing.JInternalFrame {

    /**
     * Creates new form wdwMovimientoGarantiaProveedor
     */
    AccesoExcepciones mensaje = new AccesoExcepciones();
    AccesoGarantia acceso_garantia_cliente = new AccesoGarantia();
    AccesoGarantiaProveedor controlador = new AccesoGarantiaProveedor();
    ObjetoGarantiaProveedor objeto = new ObjetoGarantiaProveedor();
    private int puedoGuardar = 0;
    private int guardar = 0;
    private String Log = "";
    
    public wdwMovimientoGarantiaProveedor() {
        initComponents();
        this.txtFechaEnvio.setDateFormatString("yyyy-MM-dd");
        this.txtFechaNotificacion.setDateFormatString("yyyy-MM-dd");
        this.txtFechaRev.setDateFormatString("yyyy-MM-dd");
        this.txtFechaActual.setText(this.obtenerFecha());
    }
    
    private void agregarLog(String texto) {
        this.Log = this.Log + "G. PROVE." + ": " + texto + " \n";
        Inventory.txtLog.setText(Log);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        panelBuscar = new javax.swing.JPanel();
        lblBuscar = new javax.swing.JLabel();
        txtBuscarSerie = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        btnSinSerial = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cbxTipoGarantia = new javax.swing.JComboBox();
        panelInfo = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtIdProv = new javax.swing.JTextField();
        txtNombreProv = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtSerieFacturaCompra = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtNumFacturaCompra = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtSerieP = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtMarcaP = new javax.swing.JTextField();
        txtProducto = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtNit = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txtIdCompra = new javax.swing.JTextField();
        comboAcciones = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtFechaCompra = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        txtFechaFin = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        txtIdProducto = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        txtIdSerie = new javax.swing.JTextField();
        txtTipoIngreso = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txtComentario = new javax.swing.JTextField();
        txtIdOrden = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        txtIdFacturaVenta = new javax.swing.JTextField();
        pnlProveedor = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtOrden = new javax.swing.JTextField();
        txtFechaNotificacion = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        txtFechaRev = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        pnlEnvio = new javax.swing.JPanel();
        txtFechaActual = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        txtGuia = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtFechaEnvio = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        txtIdRegistro = new javax.swing.JTextField();
        btnBuscarId = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtDiasEspera = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        txtserieProductoCambio = new javax.swing.JTextField();
        txtQueLeHicieron = new javax.swing.JTextField();
        lblQueLeHicieron = new javax.swing.JLabel();
        pnlBotones = new javax.swing.JPanel();
        btnLimpiar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnImprimir = new javax.swing.JButton();
        btImprimirContrasena = new javax.swing.JButton();
        pnlDatosCliente = new javax.swing.JPanel();
        txtTelefono = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setClosable(true);
        setMaximizable(true);
        setTitle("Garantía Proveedor");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/imgMovimientoGarantiaProveedor.png"))); // NOI18N
        setMinimumSize(new java.awt.Dimension(740, 715));
        setPreferredSize(new java.awt.Dimension(740, 715));

        panelBuscar.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblBuscar.setText("No. de Serie");

        txtBuscarSerie.setToolTipText("Ingrese serie del producto");

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/imgBotonBuscar.png"))); // NOI18N
        btnBuscar.setActionCommand("buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnSinSerial.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/btnSinSerial.png"))); // NOI18N
        btnSinSerial.setText("Equipo sin serial");
        btnSinSerial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSinSerialActionPerformed(evt);
            }
        });

        jLabel1.setText("Tipo");

        cbxTipoGarantia.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Garantía de Tienda", "Garantía de Proveedor" }));

        javax.swing.GroupLayout panelBuscarLayout = new javax.swing.GroupLayout(panelBuscar);
        panelBuscar.setLayout(panelBuscarLayout);
        panelBuscarLayout.setHorizontalGroup(
            panelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBuscarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblBuscar)
                .addGap(18, 18, 18)
                .addComponent(txtBuscarSerie, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbxTipoGarantia, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSinSerial)
                .addContainerGap())
        );
        panelBuscarLayout.setVerticalGroup(
            panelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBuscarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnSinSerial)
                        .addComponent(jLabel1)
                        .addComponent(cbxTipoGarantia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnBuscar)
                    .addGroup(panelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblBuscar)
                        .addComponent(txtBuscarSerie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelInfo.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel10.setText("ID Proveedor");

        txtIdProv.setBackground(new java.awt.Color(102, 102, 102));
        txtIdProv.setEditable(false);
        txtIdProv.setForeground(new java.awt.Color(255, 255, 255));

        txtNombreProv.setBackground(new java.awt.Color(102, 102, 102));
        txtNombreProv.setEditable(false);
        txtNombreProv.setForeground(new java.awt.Color(255, 255, 255));

        jLabel12.setText("Serie");

        txtSerieFacturaCompra.setBackground(new java.awt.Color(102, 102, 102));
        txtSerieFacturaCompra.setEditable(false);
        txtSerieFacturaCompra.setForeground(new java.awt.Color(255, 255, 255));

        jLabel13.setText("Numero");

        txtNumFacturaCompra.setBackground(new java.awt.Color(102, 102, 102));
        txtNumFacturaCompra.setEditable(false);
        txtNumFacturaCompra.setForeground(new java.awt.Color(255, 255, 255));

        jLabel15.setText("Serie");

        txtSerieP.setBackground(new java.awt.Color(102, 102, 102));
        txtSerieP.setEditable(false);
        txtSerieP.setForeground(new java.awt.Color(255, 255, 255));

        jLabel16.setText("Marca");

        txtMarcaP.setBackground(new java.awt.Color(102, 102, 102));
        txtMarcaP.setEditable(false);
        txtMarcaP.setForeground(new java.awt.Color(255, 255, 255));

        txtProducto.setBackground(new java.awt.Color(102, 102, 102));
        txtProducto.setEditable(false);
        txtProducto.setForeground(new java.awt.Color(255, 255, 255));

        jLabel18.setText("NIT");

        txtNit.setBackground(new java.awt.Color(102, 102, 102));
        txtNit.setEditable(false);
        txtNit.setForeground(new java.awt.Color(255, 255, 255));

        jLabel19.setText("ID Compra");

        txtIdCompra.setBackground(new java.awt.Color(102, 102, 102));
        txtIdCompra.setEditable(false);
        txtIdCompra.setForeground(new java.awt.Color(255, 255, 255));

        comboAcciones.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Elige una opcion", "Solo Guardar", "Cambio Producto sin serial", "Cambio Producto por uno igual", "Cambia Producto por uno distinto", "Reparado Proveedor", "Reparado Internamente", "Nota Crédito", "Otros" }));

        jLabel20.setText("Solución");

        jLabel14.setText("Fecha");

        txtFechaCompra.setBackground(new java.awt.Color(102, 102, 102));
        txtFechaCompra.setEditable(false);
        txtFechaCompra.setForeground(new java.awt.Color(255, 255, 255));

        jLabel23.setText("Límite Garantía");

        txtFechaFin.setBackground(new java.awt.Color(102, 102, 102));
        txtFechaFin.setEditable(false);
        txtFechaFin.setForeground(new java.awt.Color(255, 255, 255));

        jLabel24.setText("ID Producto");

        txtIdProducto.setBackground(new java.awt.Color(102, 102, 102));
        txtIdProducto.setEditable(false);
        txtIdProducto.setForeground(new java.awt.Color(255, 255, 255));

        jLabel26.setText("ID Serie");

        txtIdSerie.setBackground(new java.awt.Color(102, 102, 102));
        txtIdSerie.setEditable(false);
        txtIdSerie.setForeground(new java.awt.Color(255, 255, 255));

        txtTipoIngreso.setBackground(new java.awt.Color(255, 51, 0));
        txtTipoIngreso.setEditable(false);
        txtTipoIngreso.setForeground(new java.awt.Color(255, 255, 255));

        jLabel21.setText("Comentario");

        jLabel17.setText("ID Orden");

        jLabel28.setText("Modalidad");

        jLabel29.setText("ID Factura");

        txtIdFacturaVenta.setEditable(false);
        txtIdFacturaVenta.setBackground(new java.awt.Color(102, 102, 102));
        txtIdFacturaVenta.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout panelInfoLayout = new javax.swing.GroupLayout(panelInfo);
        panelInfo.setLayout(panelInfoLayout);
        panelInfoLayout.setHorizontalGroup(
            panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInfoLayout.createSequentialGroup()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelInfoLayout.createSequentialGroup()
                        .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel24)
                            .addGroup(panelInfoLayout.createSequentialGroup()
                                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel19)
                                    .addComponent(jLabel17)
                                    .addComponent(jLabel28)
                                    .addComponent(jLabel29))
                                .addGap(18, 18, 18)
                                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtIdProv, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
                                    .addComponent(txtIdCompra)
                                    .addComponent(txtIdProducto, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtTipoIngreso)
                                    .addComponent(txtIdOrden)
                                    .addComponent(txtIdFacturaVenta))))
                        .addGap(18, 18, 18)
                        .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelInfoLayout.createSequentialGroup()
                                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel18))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtSerieFacturaCompra, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                                    .addComponent(txtNit))
                                .addGap(18, 18, 18)
                                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel14))
                                .addGap(18, 18, 18)
                                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtNumFacturaCompra, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                                    .addComponent(txtFechaCompra))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txtProducto)
                            .addGroup(panelInfoLayout.createSequentialGroup()
                                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel15))
                                .addGap(18, 18, 18)
                                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtMarcaP, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                                    .addComponent(txtSerieP))
                                .addGap(18, 18, 18)
                                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel26)
                                    .addComponent(jLabel23))
                                .addGap(18, 18, 18)
                                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtIdSerie)
                                    .addComponent(txtFechaFin)
                                    .addComponent(txtComentario)))
                            .addComponent(txtNombreProv))
                        .addContainerGap())
                    .addGroup(panelInfoLayout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addGap(43, 43, 43)
                        .addComponent(comboAcciones, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel21)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        panelInfoLayout.setVerticalGroup(
            panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtIdProv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombreProv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSerieFacturaCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(txtNumFacturaCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(txtIdCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(jLabel14)
                    .addComponent(txtFechaCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29)
                    .addComponent(txtIdFacturaVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIdProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addGroup(panelInfoLayout.createSequentialGroup()
                        .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMarcaP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16)
                            .addComponent(jLabel26)
                            .addComponent(txtIdSerie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtIdOrden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSerieP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15)
                            .addComponent(jLabel23)
                            .addComponent(txtFechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTipoIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel28))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboAcciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20)
                    .addComponent(jLabel21)
                    .addComponent(txtComentario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlProveedor.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "PROVEEDOR", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BELOW_TOP));

        jLabel3.setText("No. Orden");

        jLabel6.setText("Fecha Notificación");

        jLabel5.setText("Fecha Revision");

        javax.swing.GroupLayout pnlProveedorLayout = new javax.swing.GroupLayout(pnlProveedor);
        pnlProveedor.setLayout(pnlProveedorLayout);
        pnlProveedorLayout.setHorizontalGroup(
            pnlProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProveedorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(pnlProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtFechaRev, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtFechaNotificacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtOrden))
                .addContainerGap())
        );
        pnlProveedorLayout.setVerticalGroup(
            pnlProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProveedorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlProveedorLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(12, 12, 12))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlProveedorLayout.createSequentialGroup()
                        .addComponent(txtOrden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(pnlProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(txtFechaRev, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtFechaNotificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlEnvio.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "ENVIO", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BELOW_TOP));

        txtFechaActual.setBackground(new java.awt.Color(102, 102, 102));
        txtFechaActual.setEditable(false);
        txtFechaActual.setForeground(new java.awt.Color(255, 255, 255));

        jLabel25.setText("Fecha");

        jLabel2.setText("No. de Guía");

        jLabel4.setText("Fecha de envío");

        javax.swing.GroupLayout pnlEnvioLayout = new javax.swing.GroupLayout(pnlEnvio);
        pnlEnvio.setLayout(pnlEnvioLayout);
        pnlEnvioLayout.setHorizontalGroup(
            pnlEnvioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEnvioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlEnvioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel25)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addGap(14, 14, 14)
                .addGroup(pnlEnvioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtFechaActual)
                    .addComponent(txtGuia)
                    .addComponent(txtFechaEnvio, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlEnvioLayout.setVerticalGroup(
            pnlEnvioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEnvioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlEnvioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFechaActual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlEnvioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtGuia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlEnvioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtFechaEnvio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel27.setText("ID Garantía Proveedor");

        btnBuscarId.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/imgBotonBuscar.png"))); // NOI18N
        btnBuscarId.setActionCommand("buscar");
        btnBuscarId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarIdActionPerformed(evt);
            }
        });

        jLabel7.setText("Dias de Espera");

        jLabel22.setText("Serie Recibida");

        txtserieProductoCambio.setEnabled(false);

        lblQueLeHicieron.setText("¿Qué le hicieron?");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel27)
                    .addComponent(lblQueLeHicieron))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtIdRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBuscarId, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(txtDiasEspera, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel22)
                        .addGap(18, 18, 18)
                        .addComponent(txtserieProductoCambio, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtQueLeHicieron))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtserieProductoCambio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel22)
                        .addComponent(jLabel7)
                        .addComponent(txtDiasEspera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnBuscarId)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel27)
                        .addComponent(txtIdRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtQueLeHicieron, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblQueLeHicieron))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlBotones.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/imgBotonLimpiar.png"))); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.setToolTipText("");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/imgBotonEditar.png"))); // NOI18N
        btnModificar.setText("Modificar");
        btnModificar.setEnabled(false);
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/imgBotonGuardar.png"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.setEnabled(false);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/imgBotonImpresoraLaser.png"))); // NOI18N
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });

        btImprimirContrasena.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/imgBotonContrasena.png"))); // NOI18N
        btImprimirContrasena.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btImprimirContrasenaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBotonesLayout = new javax.swing.GroupLayout(pnlBotones);
        pnlBotones.setLayout(pnlBotonesLayout);
        pnlBotonesLayout.setHorizontalGroup(
            pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBotonesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnImprimir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btImprimirContrasena)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlBotonesLayout.setVerticalGroup(
            pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBotonesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnModificar)
                    .addComponent(btnGuardar)
                    .addComponent(btnImprimir)
                    .addComponent(btImprimirContrasena))
                .addContainerGap())
        );

        pnlDatosCliente.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel8.setText("Telefonos");

        jLabel11.setText("Nombre");

        javax.swing.GroupLayout pnlDatosClienteLayout = new javax.swing.GroupLayout(pnlDatosCliente);
        pnlDatosCliente.setLayout(pnlDatosClienteLayout);
        pnlDatosClienteLayout.setHorizontalGroup(
            pnlDatosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDatosClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtNombre)
                .addContainerGap())
        );
        pnlDatosClienteLayout.setVerticalGroup(
            pnlDatosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDatosClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDatosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel11)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlDatosCliente, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlBotones, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlEnvio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlProveedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(panelBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlEnvio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlDatosCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlBotones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(61, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        
        if (!this.txtIdRegistro.getText().isEmpty()) {
            
            //crear el objeto para actualizar los datos de la garantía
            int id = Integer.parseInt(this.txtIdRegistro.getText());
            objeto.setNit(this.txtNit.getText());
            objeto.setProveedor(this.txtNombreProv.getText());
            objeto.setIdcompra(Integer.parseInt(this.txtIdCompra.getText()));
            objeto.setIdProveedor(Integer.parseInt(this.txtIdProv.getText()));
            objeto.setDescripcion(this.txtProducto.getText());
            objeto.setSerieFactura(this.txtSerieFacturaCompra.getText());
            objeto.setComentario(this.txtComentario.getText().replaceAll("'", "´").toUpperCase());
            objeto.setFechaCompra(this.txtFechaCompra.getText());
            objeto.setSolucion(this.comboAcciones.getSelectedItem().toString());
            objeto.setFechaEnvio(this.fechaChooser(this.txtFechaEnvio));
            objeto.setFechaRevision(this.fechaChooser(txtFechaRev));
            objeto.setFechaNotificacion(this.fechaChooser(this.txtFechaNotificacion));
            objeto.setMarca(this.txtMarcaP.getText());
            objeto.setNumGuia(this.txtGuia.getText());
            objeto.setSerieproducto(this.txtSerieP.getText());
            objeto.setNumeroFacturaCompra(this.txtNumFacturaCompra.getText());
            objeto.setFechaFin(this.txtFechaFin.getText());
            objeto.setNumeroOrden(this.txtOrden.getText());
            objeto.setDiasEspera(Integer.parseInt(this.txtDiasEspera.getText()));
            objeto.setNuevaSerieCambioProducto(this.txtserieProductoCambio.getText().replaceAll("'", "´"));
            objeto.setIdProducto(this.txtIdProducto.getText());
            objeto.setFechaGuardar(this.txtFechaActual.getText());
            objeto.setTipoGarantia(this.cbxTipoGarantia.getSelectedItem().toString());
            objeto.setTelefonoCliente(this.txtTelefono.getText());
            objeto.setNombreCliente(this.txtNombre.getText().toUpperCase());
            int id_orden_servicio = this.txtIdOrden.getText().isEmpty() ? 0 : Integer.parseInt(this.txtIdOrden.getText());
            objeto.setIdOrden(id_orden_servicio);
            objeto.setQueLeHicieron(this.txtQueLeHicieron.getText());
            objeto.setIdSerie(Integer.parseInt(txtIdSerie.getText()));
            objeto.setIdFactura(txtIdFacturaVenta.getText());
            
            try {
                mensaje.manipulacionExcepciones("informacion", controlador.modificarSolicitud(objeto, id, Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText()), "Modificar solicitud");
                this.btnModificar.setEnabled(false);
            } catch (Exception e) {
                mensaje.manipulacionExcepciones("critico", "Error al modificar la solicitud seleccionada", "Error al modificar");
            }
            
            //Cambio de estado para cada una de las soluciones seleccionadas
            //Elige una opcion
            //Solo Guardar
            //Cambio Producto sin serial
            //Cambio Producto por uno igual
            //Cambio Producto por uno distinto
            //Reparado Proveedor
            //Reparado Internamente
            //Nota Crédito
            //Otros
            
            //Si regresó el mismo producto colocarlo "En Inventario"
            try {
                
                String msg_act_m_serie = "";
                String msg_act_d_serie = "";
                int detalle_serie = 0;
                int factura_venta = txtIdFacturaVenta.getText().isEmpty() ? 0 : Integer.parseInt(txtIdFacturaVenta.getText());
                
                if (comboAcciones.getSelectedItem().toString().equals("Reparado Proveedor") || comboAcciones.getSelectedItem().toString().equals("Reparado Internamente")) {
                    agregarLog("Reparado Proveedor o Reparado Internamente");
                    //Verificar si ya esta vendido para colocar el estado correcto
                    if( factura_venta > 0) {
                        //buscar si tiene componentes esta serie
                        detalle_serie = acceso_garantia_cliente.buscarCantidadDetalleSerie(txtSerieP.getText().trim().replaceAll("'", "´").toUpperCase(), Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText());
                        if(detalle_serie > 0) {
                            msg_act_d_serie = acceso_garantia_cliente.actualizarDetalleSerieGarantia("Vendido", txtIdSerie.getText(), Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText());
                        }
                        //Ya se vendio, colocarlo como vendido
                        msg_act_m_serie = acceso_garantia_cliente.actualizarSerieRecibidaNumero("Vendido", this.txtSerieP.getText().replaceAll("'", "´").toUpperCase().trim(), Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText());
                        if (msg_act_m_serie.equals("Operacion realizada con exito.")) {
                            mensaje.manipulacionExcepciones("informacion", "Se ha actualizado la Serie con exito", "Actualizar Serie Recibida");
                        } else {
                            mensaje.manipulacionExcepciones("critico", "No pudo actualizarce el estado de la Serie.", "Actualizar Estado");
                        }
                    } else {
                        //buscar si tiene componentes esta serie
                        detalle_serie = acceso_garantia_cliente.buscarCantidadDetalleSerie(txtSerieP.getText().trim().replaceAll("'", "´").toUpperCase(), Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText());
                        if (detalle_serie > 0) {
                            msg_act_d_serie = acceso_garantia_cliente.actualizarDetalleSerieGarantia("En Inventario", txtIdSerie.getText(), Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText());
                        }
                        //Ya se vendio, colocarlo como vendido
                        msg_act_m_serie = acceso_garantia_cliente.actualizarSerieRecibidaNumero("En Inventario", this.txtSerieP.getText().replaceAll("'", "´").toUpperCase().trim(), Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText());
                        if (msg_act_m_serie.equals("Operacion realizada con exito.")) {
                            mensaje.manipulacionExcepciones("informacion", "Se ha actualizado la Serie con exito", "Actualizar Serie Recibida");
                        } else {
                            mensaje.manipulacionExcepciones("critico", "No pudo actualizarce el estado de la Serie.", "Actualizar Estado");
                        }
                    }
                    this.btnModificar.setEnabled(false);
                }
                
                if (comboAcciones.getSelectedItem().toString().equals("Cambio Producto por uno igual")){
                    agregarLog("Cambio Produto por uno igual");
                    if(txtserieProductoCambio.getText().trim().equals("0") || txtserieProductoCambio.getText().isEmpty()) {
                        mensaje.manipulacionExcepciones("critico", "Por favor ingrese la Serie que recibieron.", "Serie Recibida Erronea");
                    } else {
                        agregarLog("Intentado cambiar las Serie por ser un Producto igual.");
                        if(Integer.parseInt(txtIdFacturaVenta.getText()) > 0) {
                            agregarLog("Se le colocara el estado de Vendido");
                            mensaje.manipulacionExcepciones("informacion", acceso_garantia_cliente.actualizarSerieNuevaRecibida("Vendido", this.txtserieProductoCambio.getText().replaceAll("'", "´").toUpperCase().trim(),  this.txtSerieP.getText().replaceAll("'", "´").toUpperCase().trim(), Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText()), "Actualizar Nueva Serie");
                        } else {
                            agregarLog("Se le colocara el estado de En Inventario.");
                            mensaje.manipulacionExcepciones("informacion", acceso_garantia_cliente.actualizarSerieNuevaRecibida("En Inventario", this.txtserieProductoCambio.getText().replaceAll("'", "´").toUpperCase().trim(),  this.txtSerieP.getText().replaceAll("'", "´").toUpperCase().trim(), Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText()), "Actualizar Nueva Serie");
                        }
                        this.btnModificar.setEnabled(false);
                    }
                }
                
                if (comboAcciones.getSelectedItem().toString().equals("Cambio Producto por uno distinto")){
                    mensaje.manipulacionExcepciones("critico", "Deberá crear el Producto si no existe y crear una nueva compra para asignarlo a un proveedor.", "Distinto producto recibido");
                }
                
                if (comboAcciones.getSelectedItem().toString().equals("Nota Crédito")){
                    mensaje.manipulacionExcepciones("critico", "Recuerde colocar los datos de la Nota de Crédito en los comentarios.", "Distinto producto recibido");
                }
                
                if (comboAcciones.getSelectedItem().toString().equals("Cambio Producto sin serial")){
                    mensaje.manipulacionExcepciones("critico", "Recuerde indicar en los comentarios la solución.", "Producto sin Serial");
                }
                
                if (comboAcciones.getSelectedItem().toString().equals("Otros")){
                    mensaje.manipulacionExcepciones("critico", "Recuerde indicar en los comentarios la solución.", "Distinto producto recibido");
                }
                
            } catch(Exception Error) {
                mensaje.manipulacionExcepciones("critico", "Error al modificar la solicitud seleccionada", "Error al modificar Garantia");
                mensaje.manipulacionExcepciones("critico", Error.toString(), "Error al modificar Garantia");
            }
            
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        this.btnGuardar.setEnabled(true);
        this.btnModificar.setEnabled(false);
        this.limpiarCasillas();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed

        if (this.txtIdCompra.getText().equals("") | this.txtSerieP.getText().equals("")) {
            mensaje.manipulacionExcepciones("critico", "El formulario está vacío", "Formulario vacío");

        } else if (!this.txtIdRegistro.getText().isEmpty()) {
            mensaje.manipulacionExcepciones("critico", "Esta solicitud ya fue registrada anteriormente", "Error al elegir producto");
        } else {
            objeto.setNit(this.txtNit.getText());
            objeto.setProveedor(this.txtNombreProv.getText());
            objeto.setIdcompra(Integer.parseInt(this.txtIdCompra.getText()));
            objeto.setIdProveedor(Integer.parseInt(this.txtIdProv.getText()));
            objeto.setDescripcion(this.txtProducto.getText());
            objeto.setSerieFactura(this.txtSerieFacturaCompra.getText());
            objeto.setComentario(this.txtComentario.getText().toUpperCase().replaceAll("'", "´"));
            objeto.setFechaCompra(this.txtFechaCompra.getText());
            objeto.setSolucion(this.comboAcciones.getSelectedItem().toString());
            objeto.setFechaEnvio(this.fechaChooser(this.txtFechaEnvio));
            objeto.setFechaRevision(this.fechaChooser(txtFechaRev));
            objeto.setFechaNotificacion(this.fechaChooser(this.txtFechaNotificacion));
            objeto.setMarca(this.txtMarcaP.getText());
            objeto.setNumGuia(this.txtGuia.getText());
            objeto.setSerieproducto(this.txtSerieP.getText().replaceAll("'", "´").toUpperCase().trim());
            objeto.setNumeroFacturaCompra(this.txtNumFacturaCompra.getText());
            objeto.setNuevaSerieCambioProducto(this.txtserieProductoCambio.getText());
            objeto.setFechaFin(this.txtFechaFin.getText());
            objeto.setNumeroOrden(this.txtOrden.getText());
            objeto.setDiasEspera(Integer.parseInt(this.txtDiasEspera.getText()));
            objeto.setNuevaSerieCambioProducto(this.txtserieProductoCambio.getText());
            objeto.setIdProducto(this.txtIdProducto.getText());
            objeto.setFechaGuardar(this.txtFechaActual.getText());
            objeto.setTipoGarantia(this.cbxTipoGarantia.getSelectedItem().toString());
            objeto.setTelefonoCliente(this.txtTelefono.getText());
            objeto.setNombreCliente(this.txtNombre.getText().toUpperCase());
            int id_orden_servicio = this.txtIdOrden.getText().isEmpty() ? 0 : Integer.parseInt(this.txtIdOrden.getText());
            objeto.setIdOrden(id_orden_servicio);
            objeto.setQueLeHicieron(this.txtQueLeHicieron.getText());
            objeto.setIdSerie(Integer.parseInt(txtIdSerie.getText()));
            objeto.setIdFactura(txtIdFacturaVenta.getText());
            
            try {
                int id = controlador.insertarReclamoProveedor(objeto, Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText());
                if (id > 0) {
                    this.txtIdRegistro.setText(String.valueOf(id));
                    if (!txtTipoIngreso.getText().equals("Sin Serie")) {
                        mensaje.manipulacionExcepciones("informacion", controlador.actualizarSerieRecibida("Garantia Proveedor", this.txtIdSerie.getText(),
                                Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText()), "Actualizar serie recibida");
                    }
                }
            } catch (Exception e) {
                mensaje.manipulacionExcepciones("critico", "Error al insertar el registro", "Error al guardar");
                agregarLog("Error al guardar. \n" + e.toString());
            }
        }

    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed

        ArrayList<ObjetoGarantiaProveedor> lista = new ArrayList();
        
        String estado_busqueda = "";
        
        if(cbxTipoGarantia.getSelectedItem().toString().equals("Garantía de Tienda")) {
            estado_busqueda = "'Vendido', 'Servicio'";
        } else {
            estado_busqueda = "'En Inventario', 'Garantia Cliente', 'Vendido', 'Servicio'";
        }
        
        try {
            lista = controlador.buscarSerie(this.txtBuscarSerie.getText().trim().toUpperCase().replaceAll("'", "´"), estado_busqueda, Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText());
            if (!lista.isEmpty()) {
                if (controlador.retornarEstado().equals("Garantia Proveedor")) {
                    mensaje.manipulacionExcepciones("critico", "Esta serie ya fue registrada anteriormente.\nIngrese el ID Registro para buscar la solicitud realizada.", "Error al buscar ");
                } else {
                    this.btnGuardar.setEnabled(true);
                    this.btnModificar.setEnabled(false);
                    this.txtTipoIngreso.setText("Con Serie");
                    for (ObjetoGarantiaProveedor datos : lista) {
                        this.txtDiasEspera.setText(String.valueOf(datos.getDiasGarantia()));
                        this.txtIdProv.setText(String.valueOf(datos.getIdProveedor()));
                        this.txtMarcaP.setText(datos.getMarca());
                        this.txtSerieFacturaCompra.setText(datos.getSerieFactura());
                        this.txtProducto.setText(datos.getDescripcion());
                        this.txtNumFacturaCompra.setText(datos.getNumeroFacturaCompra());
                        this.txtSerieP.setText(datos.getSerieproducto());
                        this.txtNombreProv.setText(datos.getProveedor());
                        this.txtNit.setText(datos.getNit());
                        this.txtIdCompra.setText(String.valueOf(datos.getIdcompra()));
                        this.txtFechaCompra.setText(datos.getFechaCompra());
                        this.txtFechaFin.setText(datos.getFechaFin());
                        this.txtIdProducto.setText(datos.getIdProducto()); System.out.println(datos.getIdSerie());
                        this.txtIdSerie.setText(String.valueOf(datos.getIdSerie()));
                        this.txtIdFacturaVenta.setText(datos.getIdFactura());
                    }
                    lista.clear();
                }
            } else {
                this.limpiarCasillas();
                mensaje.manipulacionExcepciones("informacion", "No hay resultados", "Sin registros");
            }
        } catch (Exception e) {
            this.limpiarCasillas();
            mensaje.manipulacionExcepciones("critico", "Error " + e.getMessage(), "Error al buscar");
        }


    }//GEN-LAST:event_btnBuscarActionPerformed

    public Date CovertirDate(String valor) {
        Date fecha = null;
        try {
            if (valor == null || valor.equals("null")) {
                fecha = null;
            } else {
                fecha = new SimpleDateFormat("yyyy-MM-dd").parse(valor);
            }
        } catch (Exception Error) {
            mensaje.manipulacionExcepciones("critico", "Error al convertir fecha. \n" + Error.getMessage(), "Convertir Fecha");
        }
        return fecha;
    }

    private void btnBuscarIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarIdActionPerformed
        
        ArrayList<ObjetoGarantiaProveedor> lista = new ArrayList();

        if (!this.txtIdRegistro.getText().isEmpty()) {
            try {
                lista = controlador.buscarSolicitudId(this.txtIdRegistro.getText(), Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText());

                if (!lista.isEmpty()) {
                    
                    this.txtBuscarSerie.setText("");
                    this.btnModificar.setEnabled(true);
                    this.btnGuardar.setEnabled(false);
                    this.txtserieProductoCambio.setEnabled(true);
                    
                    for (ObjetoGarantiaProveedor datos : lista) {
                        
                        txtFechaEnvio.setDate(CovertirDate(datos.getFechaEnvio()));
                        txtFechaRev.setDate(CovertirDate(datos.getFechaRevision()));
                        txtFechaNotificacion.setDate(CovertirDate(datos.getFechaNotificacion()));
                        
                        this.txtFechaActual.setText(datos.getFechaGuardar());
                        this.txtIdProv.setText(String.valueOf(datos.getIdProveedor()));
                        this.txtMarcaP.setText(datos.getMarca());
                        this.txtSerieFacturaCompra.setText(datos.getSerieFactura());
                        this.txtProducto.setText(datos.getDescripcion());
                        this.txtNumFacturaCompra.setText(datos.getNumeroFacturaCompra());
                        this.txtSerieP.setText(datos.getSerieproducto());
                        this.txtNombreProv.setText(datos.getProveedor());
                        this.txtNit.setText(datos.getNit());
                        this.txtIdCompra.setText(String.valueOf(datos.getIdcompra()));
                        this.txtFechaCompra.setText(datos.getFechaCompra());
                        this.txtFechaFin.setText(datos.getFechaFin());
                        this.txtIdProducto.setText(datos.getIdProducto());
                        this.txtIdSerie.setText(String.valueOf(datos.getIdSerie()));

                        this.txtComentario.setText(datos.getComentario());
                        this.txtGuia.setText(datos.getNumGuia());
                        this.txtIdRegistro.setText(String.valueOf(datos.getIdRegistro()));
                        this.txtDiasEspera.setText(String.valueOf(datos.getDiasEspera()));
                        this.txtOrden.setText(datos.getNumeroOrden());
                        
                        this.comboAcciones.setSelectedItem(datos.getSolucion());
                        
                        this.cbxTipoGarantia.setSelectedItem(datos.getTipoGarantia());
                        this.txtTelefono.setText(datos.getTelefonoCliente());
                        this.txtNombre.setText(datos.getNombreCliente());
                        
                        this.txtserieProductoCambio.setText(datos.getNuevaSerieCambioProducto());
                        
                        this.txtIdOrden.setText(String.valueOf(datos.getIdOrden()));
                        this.txtQueLeHicieron.setText(datos.getQueLeHicieron());
                        
                        this.txtIdSerie.setText(String.valueOf(datos.getIdSerie()));
                        this.txtIdFacturaVenta.setText(datos.getIdFactura());
                    }
                    lista.clear();

                }
            } catch (Exception e) {
                this.limpiarCasillas();
                mensaje.manipulacionExcepciones("critico", "Error " + e.getMessage(), "Error al buscar");
            }
        } else {
            this.limpiarCasillas();
            mensaje.manipulacionExcepciones("critico", "No ha ingresado el ID del registro a buscar!!", "Sin registros");
        }

    }//GEN-LAST:event_btnBuscarIdActionPerformed

    private void imprimirReporte(String nombre) {
        //ejecución del repote seleccionado
        try {

            AccesoInventario acceso_inventario = new AccesoInventario();
            AccesoSucursal acceso_sucursal = new AccesoSucursal();
            ObjetosSucursal objeto_sucursal = new ObjetosSucursal();
            
            

            URL url_reporte = this.getClass().getResource("/inventory/reportes/" + nombre + ".jasper");
            JasperReport reporte = (JasperReport) JRLoader.loadObject(url_reporte);
            HashMap parametro = new HashMap();

            //parametros generales del encabezado
            objeto_sucursal = acceso_sucursal.buscarSucursales(1, Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText());

            //parametros del reporte
            parametro.put("P_DIRECCION_SUCURSAL", objeto_sucursal.getDireccion_sucursal());
            parametro.put("P_NIT", objeto_sucursal.getNit_sucursal());
            parametro.put("P_NOMBRE_EMPRESA", objeto_sucursal.getNombre_sucursal());
            parametro.put("P_SUCURSAL", objeto_sucursal.getDescripcion_sucursal());
            parametro.put("P_TELEFONO", objeto_sucursal.getTelefonos_sucursal());

            //parametro de busqueda
            parametro.put("P_ID_GARANTIA", Integer.parseInt(txtIdRegistro.getText().trim()));

            JasperPrint pantalla = JasperFillManager.fillReport(reporte, parametro, acceso_inventario.conectar());
            JInternalFrame ventana = new JInternalFrame("Inventory 3.0");
            ventana.getContentPane().add(new JRViewer(pantalla));
            ventana.setPreferredSize(new Dimension(900, 500));
            ventana.setClosable(true);
            ventana.setMaximizable(true);
            ventana.setResizable(true);
            ventana.setVisible(true);
            ventana.pack();

            int ancho = java.awt.Toolkit.getDefaultToolkit().getScreenSize().width;
            int alto = java.awt.Toolkit.getDefaultToolkit().getScreenSize().height;
            int x = (ancho - ventana.getWidth()) / 2;
            int y = (alto - ventana.getHeight() - 100) / 2;

            Inventory.pnlPrincipal.add(ventana);

            ventana.setLocation(x, y);
            ventana.setVisible(true);
            ventana.toFront();

        } catch (JRException error) {
            mensaje.manipulacionExcepciones("critico", error.getMessage(), "Reporte de Garantia Proveedor");
        }
        
    }
    
    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        imprimirReporte("rptGarantiaProveedor"); 
    }//GEN-LAST:event_btnImprimirActionPerformed

    private void btnSinSerialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSinSerialActionPerformed

        txtTipoIngreso.setText("Sin Serie");
        
        //ingresar los datos manualmente
        txtIdProv.setEditable(true);
        txtNombreProv.setEditable(true);
        txtIdCompra.setEditable(true);
        txtSerieFacturaCompra.setEditable(true);
        txtNumFacturaCompra.setEditable(true);
        txtNit.setEditable(true);
        txtFechaCompra.setEditable(true);
        txtIdProducto.setEditable(true);
        txtProducto.setEditable(true);
        txtMarcaP.setEditable(true);
        txtSerieP.setEditable(true);
        txtFechaFin.setEditable(true);
        txtIdFacturaVenta.setEditable(true);
        
        //colocar valores en cero
        txtIdSerie.setText("0");
        txtIdFacturaVenta.setText("0");
        
        //cambiar el color de los campos
        txtIdProv.setBackground(new Color(255, 255, 204));
        txtNombreProv.setBackground(new Color(255, 255, 204));
        txtIdCompra.setBackground(new Color(255, 255, 204));
        txtSerieFacturaCompra.setBackground(new Color(255, 255, 204));
        txtNumFacturaCompra.setBackground(new Color(255, 255, 204));
        txtNit.setBackground(new Color(255, 255, 204));
        txtFechaCompra.setBackground(new Color(255, 255, 204));
        txtIdProducto.setBackground(new Color(255, 255, 204));
        txtProducto.setBackground(new Color(255, 255, 204));
        txtMarcaP.setBackground(new Color(255, 255, 204));
        txtSerieP.setBackground(new Color(255, 255, 204));
        txtFechaFin.setBackground(new Color(255, 255, 204));
        txtIdFacturaVenta.setBackground(new Color(255, 255, 204));

        txtIdProv.setForeground(Color.BLACK);
        txtNombreProv.setForeground(Color.BLACK);
        txtIdCompra.setForeground(Color.BLACK);
        txtSerieFacturaCompra.setForeground(Color.BLACK);
        txtNumFacturaCompra.setForeground(Color.BLACK);
        txtNit.setForeground(Color.BLACK);
        txtFechaCompra.setForeground(Color.BLACK);
        txtIdProducto.setForeground(Color.BLACK);
        txtProducto.setForeground(Color.BLACK);
        txtMarcaP.setForeground(Color.BLACK);
        txtSerieP.setForeground(Color.BLACK);
        txtFechaFin.setForeground(Color.BLACK);
        txtIdFacturaVenta.setForeground(Color.BLACK);
        
        //habilitar el boton de guardado
        btnGuardar.setEnabled(true);
        
        //otros valores
        txtDiasEspera.setText("0");
    }//GEN-LAST:event_btnSinSerialActionPerformed

    private void btImprimirContrasenaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btImprimirContrasenaActionPerformed
        imprimirReporte("rptGarantiaProveedorDirecta");
    }//GEN-LAST:event_btImprimirContrasenaActionPerformed

    //convertir la fecha seleccionada a formato deseado
    private String fechaChooser(JDateChooser calendario) {
        try {
            Date date = calendario.getDate();
            String fecha = new SimpleDateFormat("YYYY-MM-dd").format(date);
            if (!fecha.isEmpty()) {
                return fecha;
            } else {
                return null;
            }
        } catch (NullPointerException ex) {
            mensaje.manipulacionExcepciones("critico", "No se ha seleccionado la fecha", "Falta fecha");
                
            return null;
        }
    }

    //devolver fecha actual
    private String obtenerFecha() {
        try {
            Date date = new Date();
            String fecha = new SimpleDateFormat("YYYY-MM-dd").format(date);
            return String.valueOf(fecha);
        } catch (NullPointerException ex) {
            return null;
        }
    }
     
    
    
    private void limpiarCasillas() {
        
        this.btnModificar.setEnabled(false);
        this.txtDiasEspera.setText("0");
        this.txtIdProv.setText("");
        this.txtMarcaP.setText("");
        this.txtSerieFacturaCompra.setText("");
        this.txtProducto.setText("");
        this.txtNumFacturaCompra.setText("");
        this.txtSerieP.setText("");
        this.txtFechaCompra.setText("");
        this.txtFechaFin.setText("");
        this.txtNombreProv.setText("");
        this.txtNit.setText("");
        this.txtIdCompra.setText("");
        this.txtBuscarSerie.setText("");
        this.txtOrden.setText("");
        this.txtGuia.setText("");
        this.txtComentario.setText("");
        this.txtserieProductoCambio.setText("");
        this.txtIdRegistro.setText("");
        this.txtIdProducto.setText("");
        this.txtIdSerie.setText("");
        this.comboAcciones.setSelectedIndex(0);
        this.txtFechaEnvio.setDate(null);
        this.txtFechaRev.setDate(null);
        this.txtFechaNotificacion.setDate(null);
        this.txtDiasEspera.setText("");
        this.txtIdSerie.setText("");
        this.txtTipoIngreso.setText("");
        this.txtFechaActual.setText("");
        this.txtIdOrden.setText("");
        this.txtQueLeHicieron.setText("");
        this.txtIdFacturaVenta.setText("");
        
        //devolver los colores originaels
        
        //ingresar los datos manualmente
        this.txtIdProv.setEditable(false);
        this.txtNombreProv.setEditable(false);
        this.txtIdCompra.setEditable(false);
        this.txtSerieFacturaCompra.setEditable(false);
        this.txtNumFacturaCompra.setEditable(false);
        this.txtNit.setEditable(false);
        this.txtFechaCompra.setEditable(false);
        this.txtIdProducto.setEditable(false);
        this.txtProducto.setEditable(false);
        this.txtMarcaP.setEditable(false);
        this.txtSerieP.setEditable(false);
        this.txtFechaFin.setEditable(false);
        
        this.txtTelefono.setText("");
        this.txtNombre.setText("");
        this.cbxTipoGarantia.setSelectedIndex(0);
        
        //colocar valores en cero
        txtIdSerie.setText("0");
        
        //cambiar el color de los campos
        txtIdProv.setBackground(new Color(102, 102, 102));
        txtNombreProv.setBackground(new Color(102, 102, 102));
        txtIdCompra.setBackground(new Color(102, 102, 102));
        txtSerieFacturaCompra.setBackground(new Color(102, 102, 102));
        txtNumFacturaCompra.setBackground(new Color(102, 102, 102));
        txtNit.setBackground(new Color(102, 102, 102));
        txtFechaCompra.setBackground(new Color(102, 102, 102));
        txtIdProducto.setBackground(new Color(102, 102, 102));
        txtProducto.setBackground(new Color(102, 102, 102));
        txtMarcaP.setBackground(new Color(102, 102, 102));
        txtSerieP.setBackground(new Color(102, 102, 102));
        txtFechaFin.setBackground(new Color(102, 102, 102));

        txtIdProv.setForeground(new Color(255, 255, 255));
        txtNombreProv.setForeground(new Color(255, 255, 255));
        txtIdCompra.setForeground(new Color(255, 255, 255));
        txtSerieFacturaCompra.setForeground(new Color(255, 255, 255));
        txtNumFacturaCompra.setForeground(new Color(255, 255, 255));
        txtNit.setForeground(new Color(255, 255, 255));
        txtFechaCompra.setForeground(new Color(255, 255, 255));
        txtIdProducto.setForeground(new Color(255, 255, 255));
        txtProducto.setForeground(new Color(255, 255, 255));
        txtMarcaP.setForeground(new Color(255, 255, 255));
        txtSerieP.setForeground(new Color(255, 255, 255));
        txtFechaFin.setForeground(new Color(255, 255, 255));
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btImprimirContrasena;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnBuscarId;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnSinSerial;
    private javax.swing.JComboBox cbxTipoGarantia;
    private javax.swing.JComboBox<String> comboAcciones;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblBuscar;
    private javax.swing.JLabel lblQueLeHicieron;
    private javax.swing.JPanel panelBuscar;
    private javax.swing.JPanel panelInfo;
    private javax.swing.JPanel pnlBotones;
    private javax.swing.JPanel pnlDatosCliente;
    private javax.swing.JPanel pnlEnvio;
    private javax.swing.JPanel pnlProveedor;
    private javax.swing.JTextField txtBuscarSerie;
    private javax.swing.JTextField txtComentario;
    private javax.swing.JTextField txtDiasEspera;
    private javax.swing.JTextField txtFechaActual;
    private javax.swing.JTextField txtFechaCompra;
    private com.toedter.calendar.JDateChooser txtFechaEnvio;
    private javax.swing.JTextField txtFechaFin;
    private com.toedter.calendar.JDateChooser txtFechaNotificacion;
    private com.toedter.calendar.JDateChooser txtFechaRev;
    private javax.swing.JTextField txtGuia;
    private javax.swing.JTextField txtIdCompra;
    private javax.swing.JTextField txtIdFacturaVenta;
    private javax.swing.JTextField txtIdOrden;
    private javax.swing.JTextField txtIdProducto;
    private javax.swing.JTextField txtIdProv;
    private javax.swing.JTextField txtIdRegistro;
    private javax.swing.JTextField txtIdSerie;
    private javax.swing.JTextField txtMarcaP;
    private javax.swing.JTextField txtNit;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNombreProv;
    private javax.swing.JTextField txtNumFacturaCompra;
    private javax.swing.JTextField txtOrden;
    private javax.swing.JTextField txtProducto;
    private javax.swing.JTextField txtQueLeHicieron;
    private javax.swing.JTextField txtSerieFacturaCompra;
    private javax.swing.JTextField txtSerieP;
    private javax.swing.JTextField txtTelefono;
    private javax.swing.JTextField txtTipoIngreso;
    private javax.swing.JTextField txtserieProductoCambio;
    // End of variables declaration//GEN-END:variables
}
