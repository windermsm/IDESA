package inventory.vistas;

import inventory.acceso.*;
import inventory.objetos.ObjetosAnticipo;
import inventory.objetos.ObjetosSucursal;
import inventory.servicios.Matematicas;
import java.awt.Dimension;
import java.net.URL;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JInternalFrame;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.swing.JRViewer;

public class wdwBaseDeDAtosHistorialAnticipos extends javax.swing.JInternalFrame {

    private static String Log = "";
    private Matematicas matematicas = new Matematicas();
    
    /**
     * Creates new form wdwBaseDeDAtosHistorialDeVentas
     */
    public wdwBaseDeDAtosHistorialAnticipos() {
        initComponents();
    }
    
    private void agregarLog(String texto) {
        this.Log = this.Log + "HISTORIAL ANTICIPOS" + ": " + texto + " \n";
        Inventory.txtLog.setText(Log);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    AccesoAnticipo acceso_anticipo = new AccesoAnticipo();
    AccesoExcepciones mensaje = new AccesoExcepciones();
    
    private void mostrarRegistrosGuardados(String pFecha_incial , String pFecha_final){
        
        DefaultTableModel tabla = new DefaultTableModel();
        
        ArrayList<ObjetosAnticipo>  listado = new ArrayList();
        
        try{
            listado = acceso_anticipo.listarAnticipo(pFecha_incial, pFecha_final, Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText());
        }catch(Error error){
            mensaje.manipulacionExcepciones("critico", error.getMessage(), "Listar Anticipos");
            agregarLog(error.getMessage());
        }
        
        //Mostrar los valores de la lista
        if(listado.isEmpty()){
            mensaje.manipulacionExcepciones("critico", "No existen datos almacenados para esta Fecha.", "Mostrar Registros Guardados");
        } else {
            tabla.addColumn("ID Anticipo");
            tabla.addColumn("NIT");
            tabla.addColumn("Nombre");
            tabla.addColumn("Telefono");
            tabla.addColumn("Estado");
            tabla.addColumn("Fecha Entrega");
            tabla.addColumn("ID Factura");
            tabla.addColumn("Anticipo");
            tabla.addColumn("Saldo");
            tabla.addColumn("Total");
            tabla.addColumn("Usuario");
            tabla.setRowCount(listado.size());
            
            int c = 0;

            for(ObjetosAnticipo x : listado) {
                tabla.setValueAt(x.getId_anticipo(), c, 0); 
                tabla.setValueAt(x.getNit_anticipo(), c, 1);
                tabla.setValueAt(x.getNombre_persona_anticipo(), c, 2);
                tabla.setValueAt(x.getTelefono_anticipo(), c, 3);
                tabla.setValueAt(x.getEstado_anticipo(), c, 4);
                tabla.setValueAt(x.getFecha_entrega_persona_aticipo().substring(0, 10), c, 5);
                tabla.setValueAt(x.getId_factura(), c, 6);
                tabla.setValueAt(x.getTotal_anticipo(), c, 7);
                tabla.setValueAt(x.getSaldo_anticipo(), c, 8);
                double total = matematicas.aproxima(x.getTotal_anticipo() + x.getSaldo_anticipo(), 2);
                tabla.setValueAt(total, c, 9);
                tabla.setValueAt(x.getUsuario_registro_anticipo(), c, 10);
                c++;
            }
            
            tblDetalleHistorial.setModel(tabla);
        }
    }
    
    private void mostrarRegistrosGuardadosPorEstado(String pFecha_incial , String pFecha_final, String pEstado){
        
        DefaultTableModel tabla = new DefaultTableModel();
        
        ArrayList<ObjetosAnticipo>  listado = new ArrayList();
        
        try{
            listado = acceso_anticipo.listarAnticipoPorEstado(pFecha_incial, pFecha_final, pEstado, Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText());
        }catch(Error error){
            mensaje.manipulacionExcepciones("critico", error.getMessage(), "Listar Anticipos");
            agregarLog(error.getMessage());
        }
        
        //Mostrar los valores de la lista
        if(listado.isEmpty()){
            mensaje.manipulacionExcepciones("critico", "No existen datos almacenados para esta Fecha.", "Mostrar Registros Guardados");
        } else {
            tabla.addColumn("ID Anticipo");
            tabla.addColumn("NIT");
            tabla.addColumn("Nombre");
            tabla.addColumn("Telefono");
            tabla.addColumn("Estado");
            tabla.addColumn("Fecha Entrega");
            tabla.addColumn("ID Factura");
            tabla.addColumn("Anticipo");
            tabla.addColumn("Saldo");
            tabla.addColumn("Total");
            tabla.addColumn("Usuario");
            tabla.setRowCount(listado.size());
            
            int c = 0;

            for(ObjetosAnticipo x : listado) {
                tabla.setValueAt(x.getId_anticipo(), c, 0); 
                tabla.setValueAt(x.getNit_anticipo(), c, 1);
                tabla.setValueAt(x.getNombre_persona_anticipo(), c, 2);
                tabla.setValueAt(x.getTelefono_anticipo(), c, 3);
                tabla.setValueAt(x.getEstado_anticipo(), c, 4);
                tabla.setValueAt(x.getFecha_entrega_persona_aticipo().substring(0, 10), c, 5);
                tabla.setValueAt(x.getId_factura(), c, 6);
                tabla.setValueAt(x.getTotal_anticipo(), c, 7);
                tabla.setValueAt(x.getSaldo_anticipo(), c, 8);
                double total = matematicas.aproxima(x.getTotal_anticipo() + x.getSaldo_anticipo(), 2);
                tabla.setValueAt(total, c, 9);
                tabla.setValueAt(x.getUsuario_registro_anticipo(), c, 10);
                c++;
            }
            
            tblDetalleHistorial.setModel(tabla);
        }
    }
    
    private void mostrarRegistrosPorNombre(String pNombre){
        
        DefaultTableModel tabla = new DefaultTableModel();
        
        ArrayList<ObjetosAnticipo>  listado = new ArrayList();
        
        try{
            listado = acceso_anticipo.listarAnticipoPorNombre(pNombre, Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText());
        }catch(Error error){
            mensaje.manipulacionExcepciones("critico", error.getMessage(), "Listar Anticipos por Nombre");
            agregarLog(error.getMessage());
        }
        
        //Mostrar los valores de la lista
        if(listado.isEmpty()){
            mensaje.manipulacionExcepciones("critico", "No existen datos almacenados para este Nombre.", "Mostrar Registros Por Nombre");
        } else {
            tabla.addColumn("ID Anticipo");
            tabla.addColumn("NIT");
            tabla.addColumn("Nombre");
            tabla.addColumn("Telefono");
            tabla.addColumn("Estado");
            tabla.addColumn("Fecha Entrega");
            tabla.addColumn("ID Factura");
            tabla.addColumn("Anticipo");
            tabla.addColumn("Saldo");
            tabla.addColumn("Total");
            tabla.addColumn("Usuario");
            tabla.setRowCount(listado.size());
            
            int c = 0;

            for(ObjetosAnticipo x : listado) {
                tabla.setValueAt(x.getId_anticipo(), c, 0); 
                tabla.setValueAt(x.getNit_anticipo(), c, 1);
                tabla.setValueAt(x.getNombre_persona_anticipo(), c, 2);
                tabla.setValueAt(x.getTelefono_anticipo(), c, 3);
                tabla.setValueAt(x.getEstado_anticipo(), c, 4);
                tabla.setValueAt(x.getFecha_entrega_persona_aticipo().substring(0, 10), c, 5);
                tabla.setValueAt(x.getId_factura(), c, 6);
                tabla.setValueAt(x.getTotal_anticipo(), c, 7);
                tabla.setValueAt(x.getSaldo_anticipo(), c, 8);
                double total = matematicas.aproxima(x.getTotal_anticipo() + x.getSaldo_anticipo(), 2);
                tabla.setValueAt(total, c, 9);
                tabla.setValueAt(x.getUsuario_registro_anticipo(), c, 10);
                c++;
            }
            
            tblDetalleHistorial.setModel(tabla);
        }
    }
    
    private void mostrarRegistrosPorNit(String pNit){
        
        DefaultTableModel tabla = new DefaultTableModel();
        
        ArrayList<ObjetosAnticipo>  listado = new ArrayList();
        
        try{
            listado = acceso_anticipo.listarAnticipoPorNit(pNit, Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText());
        }catch(Error error){
            mensaje.manipulacionExcepciones("critico", error.getMessage(), "Listar Anticipos por NIT");
            agregarLog(error.getMessage());
        }
        
        //Mostrar los valores de la lista
        if(listado.isEmpty()){
            mensaje.manipulacionExcepciones("critico", "No existen datos almacenados para este NIT.", "Mostrar Registros Por NIT");
        } else {
            tabla.addColumn("ID Anticipo");
            tabla.addColumn("NIT");
            tabla.addColumn("Nombre");
            tabla.addColumn("Telefono");
            tabla.addColumn("Estado");
            tabla.addColumn("Fecha Entrega");
            tabla.addColumn("ID Factura");
            tabla.addColumn("Anticipo");
            tabla.addColumn("Saldo");
            tabla.addColumn("Total");
            tabla.addColumn("Usuario");
            tabla.setRowCount(listado.size());
            
            int c = 0;

            for(ObjetosAnticipo x : listado) {
                tabla.setValueAt(x.getId_anticipo(), c, 0); 
                tabla.setValueAt(x.getNit_anticipo(), c, 1);
                tabla.setValueAt(x.getNombre_persona_anticipo(), c, 2);
                tabla.setValueAt(x.getTelefono_anticipo(), c, 3);
                tabla.setValueAt(x.getEstado_anticipo(), c, 4);
                tabla.setValueAt(x.getFecha_entrega_persona_aticipo().substring(0, 10), c, 5);
                tabla.setValueAt(x.getId_factura(), c, 6);
                tabla.setValueAt(x.getTotal_anticipo(), c, 7);
                tabla.setValueAt(x.getSaldo_anticipo(), c, 8);
                double total = matematicas.aproxima(x.getTotal_anticipo() + x.getSaldo_anticipo(), 2);
                tabla.setValueAt(total, c, 9);
                tabla.setValueAt(x.getUsuario_registro_anticipo(), c, 10);
                c++;
            }
            
            tblDetalleHistorial.setModel(tabla);
        }
    }

    private void limpiarTabla() {
        DefaultTableModel modelo = new DefaultTableModel();
        try {
            for (int x = 0; x < modelo.getRowCount(); x++) {
                modelo.removeRow(x);
            }
        } catch (Exception Error) {
            System.out.println("Error al limpira tabla de Componentes: \n" + Error.toString());
        }
        tblDetalleHistorial.setModel(modelo);
    }
    
    public void imprimirReporte(String tamanio) {
        //ejecución del repote seleccionado
        try{
            
            AccesoInventario acceso_inventario = new AccesoInventario();
            AccesoSucursal acceso_sucursal = new AccesoSucursal();
            ObjetosSucursal objeto_sucursal = new ObjetosSucursal();
            
            //Validar el tamaño
            String nombre_reporte = "rptAnticipo";
            if(tamanio.equals("Carta")) {
                nombre_reporte = "rptAnticipoCarta";
            }
            
            URL url_reporte = this.getClass().getResource("/inventory/reportes/" + nombre_reporte + ".jasper");
            JasperReport reporte = (JasperReport) JRLoader.loadObject(url_reporte);
            HashMap parametro = new HashMap();
            
            //parametros generales del encabezado
            objeto_sucursal = acceso_sucursal.buscarSucursales(1, Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText());
            
            //parametros del reporte
            parametro.put("P_DIRECCION_SUCURSAL", objeto_sucursal.getDireccion_sucursal());
            parametro.put("P_NIT", objeto_sucursal.getNit_sucursal());
            parametro.put("P_NOMBRE_EMPRESA", objeto_sucursal.getNombre_sucursal());
            parametro.put("P_SUCURSAL", objeto_sucursal.getDescripcion_sucursal());
            parametro.put("P_TELEFONO", objeto_sucursal.getTelefonos_sucursal());
            
            //parametro de busqueda
            parametro.put("P_ID_ANTICIPO", Integer.parseInt(txtIdAnticipo.getText().trim()));
            
            JasperPrint pantalla = JasperFillManager.fillReport(reporte, parametro, acceso_inventario.conectar());
            JInternalFrame ventana = new JInternalFrame("Inventory 3.0");
            ventana.getContentPane().add(new JRViewer(pantalla));
            ventana.setPreferredSize(new Dimension(900, 500));
            ventana.setClosable(true);
            ventana.setMaximizable(true);
            ventana.setResizable(true);
            ventana.setVisible(true);
            ventana.pack();
            
            int ancho = java.awt.Toolkit.getDefaultToolkit().getScreenSize().width;
            int alto = java.awt.Toolkit.getDefaultToolkit().getScreenSize().height;
            int x  = (ancho  - ventana.getWidth() ) / 2;
            int y  = ( alto - ventana.getHeight() - 100 ) / 2;
            
            Inventory.pnlPrincipal.add(ventana);
            
            ventana.setLocation(x, y);
            ventana.setVisible(true);
            ventana.toFront();
            
        } catch (JRException error) {
            mensaje.manipulacionExcepciones("critico", error.getMessage(), "Reporte de Anticipo Cliente");
        }
    }
    
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlDetalle = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDetalleHistorial = new javax.swing.JTable();
        pnlBotones = new javax.swing.JPanel();
        lblIdVenta = new javax.swing.JLabel();
        txtIdAnticipo = new javax.swing.JTextField();
        lblFecha1 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtNit = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtIdFactura = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        btnBuscarSerie = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtEstado = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtFechaEntrega = new javax.swing.JTextField();
        txtAnticipo = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtSaldo = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        btnReporte = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        lblHasta = new javax.swing.JLabel();
        txtFechaInicial = new com.toedter.calendar.JDateChooser();
        btnMostrar = new javax.swing.JButton();
        lblFecha = new javax.swing.JLabel();
        btnMostrarNombre = new javax.swing.JButton();
        btnBuscarEstado = new javax.swing.JButton();
        cbxEstado = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        txtFechaFinal = new com.toedter.calendar.JDateChooser();
        jLabel10 = new javax.swing.JLabel();
        cbxTamnio = new javax.swing.JComboBox<>();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Historial de Anticipos");
        setToolTipText("");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/historialAnticipos.png"))); // NOI18N

        pnlDetalle.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tblDetalleHistorial.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Anticipo", "NIT", "Nombre", "Telefono", "Estado", "Fecha Entrega", "ID Factura", "Anticipo", "Saldo", "Total", "Usuario"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDetalleHistorial.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDetalleHistorialMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDetalleHistorial);

        javax.swing.GroupLayout pnlDetalleLayout = new javax.swing.GroupLayout(pnlDetalle);
        pnlDetalle.setLayout(pnlDetalleLayout);
        pnlDetalleLayout.setHorizontalGroup(
            pnlDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDetalleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        pnlDetalleLayout.setVerticalGroup(
            pnlDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDetalleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlBotones.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblIdVenta.setText("ID Anticipo");

        txtIdAnticipo.setBackground(new java.awt.Color(255, 255, 204));
        txtIdAnticipo.setToolTipText("Ingrese el ID de la venta o seleccionela de la lista de busqueda");

        lblFecha1.setText("Nombre");

        txtNombre.setToolTipText("Espacios en blanco al final y al inico de la plabra colocar el simbolo %");

        txtNit.setToolTipText("");

        jLabel1.setText("NIT");

        txtTelefono.setEditable(false);
        txtTelefono.setBackground(new java.awt.Color(102, 102, 102));
        txtTelefono.setForeground(new java.awt.Color(255, 255, 255));
        txtTelefono.setToolTipText("");

        jLabel3.setText("Telefono");

        txtIdFactura.setEditable(false);
        txtIdFactura.setBackground(new java.awt.Color(102, 102, 102));
        txtIdFactura.setForeground(new java.awt.Color(255, 255, 255));
        txtIdFactura.setToolTipText("");

        jLabel4.setText("ID Factura");

        btnBuscarSerie.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/imgBotonBuscar.png"))); // NOI18N
        btnBuscarSerie.setText("Buscar");
        btnBuscarSerie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarSerieActionPerformed(evt);
            }
        });

        jLabel2.setText("Estado");

        txtEstado.setEditable(false);
        txtEstado.setBackground(new java.awt.Color(102, 102, 102));
        txtEstado.setForeground(new java.awt.Color(255, 255, 255));

        jLabel5.setText("Fecha");

        txtFechaEntrega.setEditable(false);
        txtFechaEntrega.setBackground(new java.awt.Color(102, 102, 102));
        txtFechaEntrega.setForeground(new java.awt.Color(255, 255, 255));

        txtAnticipo.setEditable(false);
        txtAnticipo.setBackground(new java.awt.Color(102, 102, 102));
        txtAnticipo.setForeground(new java.awt.Color(255, 255, 255));

        jLabel7.setText("Saldo");

        txtSaldo.setEditable(false);
        txtSaldo.setBackground(new java.awt.Color(102, 102, 102));
        txtSaldo.setForeground(new java.awt.Color(255, 255, 255));

        jLabel8.setText("Total");

        txtTotal.setEditable(false);
        txtTotal.setBackground(new java.awt.Color(102, 102, 102));
        txtTotal.setForeground(new java.awt.Color(255, 255, 255));

        btnReporte.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/imgBotonImpresoraLaser.png"))); // NOI18N
        btnReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReporteActionPerformed(evt);
            }
        });

        jLabel6.setText("Anticipo");

        lblHasta.setText("Hasta");

        txtFechaInicial.setBackground(new java.awt.Color(240, 240, 204));
        txtFechaInicial.setToolTipText("Ingrese la Fecha Inicial.");
        txtFechaInicial.setDateFormatString("yyyy-MM-dd");
        txtFechaInicial.setMaximumSize(new java.awt.Dimension(120, 20));
        txtFechaInicial.setMinimumSize(new java.awt.Dimension(120, 20));
        txtFechaInicial.setPreferredSize(new java.awt.Dimension(120, 20));

        btnMostrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/imgBotonBuscar.png"))); // NOI18N
        btnMostrar.setText("Buscar");
        btnMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarActionPerformed(evt);
            }
        });

        lblFecha.setText("Desde");

        btnMostrarNombre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/imgBotonBuscar.png"))); // NOI18N
        btnMostrarNombre.setText("Buscar");
        btnMostrarNombre.setToolTipText("");
        btnMostrarNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarNombreActionPerformed(evt);
            }
        });

        btnBuscarEstado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/imgBotonBuscar.png"))); // NOI18N
        btnBuscarEstado.setText("Buscar");
        btnBuscarEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarEstadoActionPerformed(evt);
            }
        });

        cbxEstado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Creado", "Anulado", "Despachado", "Devuelto" }));

        jLabel9.setText("Estado");

        txtFechaFinal.setBackground(new java.awt.Color(240, 240, 204));
        txtFechaFinal.setToolTipText("Ingrese la Fecha Final.");
        txtFechaFinal.setDateFormatString("yyyy-MM-dd");
        txtFechaFinal.setMaximumSize(new java.awt.Dimension(120, 20));
        txtFechaFinal.setMinimumSize(new java.awt.Dimension(120, 20));
        txtFechaFinal.setPreferredSize(new java.awt.Dimension(120, 20));

        jLabel10.setText("Tamanio");

        cbxTamnio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1/2 Carta", "Carta" }));

        javax.swing.GroupLayout pnlBotonesLayout = new javax.swing.GroupLayout(pnlBotones);
        pnlBotones.setLayout(pnlBotonesLayout);
        pnlBotonesLayout.setHorizontalGroup(
            pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBotonesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblIdVenta)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtAnticipo, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtFechaEntrega, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTelefono)
                    .addGroup(pnlBotonesLayout.createSequentialGroup()
                        .addComponent(txtIdAnticipo, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnReporte))
                    .addComponent(txtTotal))
                .addGap(18, 18, 18)
                .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBotonesLayout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(164, 164, 164))
                        .addGroup(pnlBotonesLayout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtIdFactura)
                                .addComponent(txtEstado)
                                .addComponent(txtSaldo)
                                .addComponent(txtNit, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(pnlBotonesLayout.createSequentialGroup()
                        .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(btnBuscarSerie)
                .addGap(18, 18, 18)
                .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFecha)
                    .addComponent(lblFecha1)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlBotonesLayout.createSequentialGroup()
                        .addComponent(cbxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbxTamnio, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(6, 6, 6))
                    .addGroup(pnlBotonesLayout.createSequentialGroup()
                        .addComponent(txtFechaInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblHasta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtFechaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtNombre))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnMostrar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnMostrarNombre, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarEstado, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        pnlBotonesLayout.setVerticalGroup(
            pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBotonesLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnReporte)
                    .addGroup(pnlBotonesLayout.createSequentialGroup()
                        .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtIdAnticipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblIdVenta)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFechaEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtIdFactura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7)
                                .addComponent(txtAnticipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pnlBotonesLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnBuscarSerie)
                        .addComponent(txtNit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblFecha))
                    .addComponent(txtFechaInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnMostrar)
                    .addComponent(lblHasta)
                    .addComponent(txtFechaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFecha1)
                    .addComponent(btnMostrarNombre))
                .addGap(6, 6, 6)
                .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(cbxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarEstado)
                    .addComponent(jLabel10)
                    .addComponent(cbxTamnio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlBotones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlDetalle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlBotones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlDetalle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarActionPerformed
        limpiarTabla();
        if (txtFechaInicial.getDate().toString().equals("") || txtFechaFinal.getDate().toString().equals("")) {
            mensaje.manipulacionExcepciones("critico", "Por favor ingrese la Fechas.", "Boton Buscar");
        } else {
            String desde = ( txtFechaInicial.getDate().getYear() + 1900 ) + "-" + ( txtFechaInicial.getDate().getMonth() + 1 ) + "-" + txtFechaInicial.getDate().getDate();
            String hasta = ( txtFechaFinal.getDate().getYear() + 1900 ) + "-" + ( txtFechaFinal.getDate().getMonth() + 1 ) + "-" + txtFechaFinal.getDate().getDate();
            mostrarRegistrosGuardados(desde, hasta);
        }
    }//GEN-LAST:event_btnMostrarActionPerformed

    private void tblDetalleHistorialMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDetalleHistorialMouseClicked
        
        if (String.valueOf(tblDetalleHistorial.getSelectedColumn()).equals("0")) {   
            int fila_seleccionada = tblDetalleHistorial.getSelectedRow();
            txtIdAnticipo.setText(tblDetalleHistorial.getValueAt(fila_seleccionada, 0).toString());
            txtNit.setText(tblDetalleHistorial.getValueAt(fila_seleccionada, 1).toString());
            txtNombre.setText(tblDetalleHistorial.getValueAt(fila_seleccionada, 2).toString());
            txtTelefono.setText(tblDetalleHistorial.getValueAt(fila_seleccionada, 3).toString());
            txtEstado.setText(tblDetalleHistorial.getValueAt(fila_seleccionada, 4).toString());
            txtFechaEntrega.setText(tblDetalleHistorial.getValueAt(fila_seleccionada, 5).toString());
            txtIdFactura.setText(tblDetalleHistorial.getValueAt(fila_seleccionada, 6).toString());
            txtAnticipo.setText(tblDetalleHistorial.getValueAt(fila_seleccionada, 7).toString());
            txtSaldo.setText(tblDetalleHistorial.getValueAt(fila_seleccionada, 8).toString());
            txtTotal.setText(tblDetalleHistorial.getValueAt(fila_seleccionada, 9).toString());
        }
    }//GEN-LAST:event_tblDetalleHistorialMouseClicked

    private void btnMostrarNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarNombreActionPerformed
        limpiarTabla();
        if (txtNombre.getText().isEmpty()) {
            mensaje.manipulacionExcepciones("critico", "Por favor ingrese el nombre del Cliente.", "Boton Mostar");
        } else {
            mostrarRegistrosPorNombre(txtNombre.getText());
        }
    }//GEN-LAST:event_btnMostrarNombreActionPerformed

    private void btnBuscarSerieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarSerieActionPerformed
        limpiarTabla();
        if (txtNit.getText().isEmpty()) {
            mensaje.manipulacionExcepciones("critico", "Por favor ingrese el numero de NIT.", "Buscar por NIT");
        } else {
            mostrarRegistrosPorNit(txtNit.getText());
        }
        
    }//GEN-LAST:event_btnBuscarSerieActionPerformed

    private void btnReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReporteActionPerformed
        if(txtIdAnticipo.getText().isEmpty()) {
            mensaje.manipulacionExcepciones("critico", "No se puede mostrar el reporte porque no esta guardado el registro.", "Reporte Anticipo");
        } else {
            imprimirReporte(cbxTamnio.getSelectedItem().toString());
        }
    }//GEN-LAST:event_btnReporteActionPerformed

    private void btnBuscarEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarEstadoActionPerformed
        limpiarTabla();
        if (txtFechaInicial.getDate().toString().equals("") || txtFechaFinal.getDate().toString().equals("")) {
            mensaje.manipulacionExcepciones("critico", "Por favor ingrese la Fechas.", "Boton Buscar");
        } else {
            String estado = cbxEstado.getSelectedItem().toString();
            String desde = ( txtFechaInicial.getDate().getYear() + 1900 ) + "-" + ( txtFechaInicial.getDate().getMonth() + 1 ) + "-" + txtFechaInicial.getDate().getDate();
            String hasta = ( txtFechaFinal.getDate().getYear() + 1900 ) + "-" + ( txtFechaFinal.getDate().getMonth() + 1 ) + "-" + txtFechaFinal.getDate().getDate();
            mostrarRegistrosGuardadosPorEstado(desde, hasta, estado);
        }
    }//GEN-LAST:event_btnBuscarEstadoActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarEstado;
    private javax.swing.JButton btnBuscarSerie;
    private javax.swing.JButton btnMostrar;
    private javax.swing.JButton btnMostrarNombre;
    private javax.swing.JButton btnReporte;
    private javax.swing.JComboBox cbxEstado;
    private javax.swing.JComboBox<String> cbxTamnio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblFecha1;
    private javax.swing.JLabel lblHasta;
    private javax.swing.JLabel lblIdVenta;
    private javax.swing.JPanel pnlBotones;
    private javax.swing.JPanel pnlDetalle;
    private javax.swing.JTable tblDetalleHistorial;
    private javax.swing.JTextField txtAnticipo;
    private javax.swing.JTextField txtEstado;
    private javax.swing.JTextField txtFechaEntrega;
    private com.toedter.calendar.JDateChooser txtFechaFinal;
    private com.toedter.calendar.JDateChooser txtFechaInicial;
    private javax.swing.JTextField txtIdAnticipo;
    public static javax.swing.JTextField txtIdFactura;
    private javax.swing.JTextField txtNit;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtSaldo;
    public static javax.swing.JTextField txtTelefono;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}
