package inventory.vistas;

import inventory.acceso.*;
import inventory.librerias.NormalCell;
import inventory.objetos.ObjetosAbono;
import inventory.objetos.ObjetosCliente;
import inventory.objetos.ObjetosPersona;
import inventory.objetos.ObjetosSucursal;
import inventory.servicios.Matematicas;
import java.awt.Dimension;
import java.net.URL;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import javax.swing.JInternalFrame;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.swing.JRViewer;

public class wdwMovimientoAbonos extends javax.swing.JInternalFrame {
    
    private Matematicas matematicas = new Matematicas();

    public wdwMovimientoAbonos() {
        initComponents();
        mostrarRegistrosGuardados();
        tblFacturas.setDefaultRenderer(Object.class, new NormalCell());
        
        if(Inventory.lblRol.getText().equals("Administrador")) {
            btnAnulaAbono.setVisible(true);
        } else {
            btnAnulaAbono.setVisible(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlEncabezado = new javax.swing.JPanel();
        lblIdCliente = new javax.swing.JLabel();
        txtIdCliente = new javax.swing.JTextField();
        lblNombreCliente = new javax.swing.JLabel();
        lblTelCliente = new javax.swing.JLabel();
        txtIdFactura = new javax.swing.JTextField();
        lblDirCliente = new javax.swing.JLabel();
        txtTotalFacturado = new javax.swing.JTextField();
        txtNomPersona = new javax.swing.JTextField();
        lblCelular = new javax.swing.JLabel();
        txtContado = new javax.swing.JTextField();
        lblEmail = new javax.swing.JLabel();
        txtAbonado = new javax.swing.JTextField();
        lblIdPersona = new javax.swing.JLabel();
        txtIdPersona = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtAbono = new javax.swing.JTextField();
        lblTelCliente1 = new javax.swing.JLabel();
        txtNumeroFactura = new javax.swing.JTextField();
        lblDirCliente1 = new javax.swing.JLabel();
        txtCredito = new javax.swing.JTextField();
        lblEmail1 = new javax.swing.JLabel();
        txtDiasCredito = new javax.swing.JTextField();
        txtSaldo = new javax.swing.JTextField();
        lblSaldo = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtComision = new javax.swing.JTextField();
        txtFinalizaCredito = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtNumeroDocumento = new javax.swing.JTextField();
        cbxTipo = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtBanco = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        pnlBotones = new javax.swing.JPanel();
        btnBuscar = new javax.swing.JButton();
        lblNitCliente = new javax.swing.JLabel();
        txtNitPersona = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtBuscarId = new javax.swing.JTextField();
        btnBuscar1 = new javax.swing.JButton();
        txtBuscarNombre = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        btnBuscar2 = new javax.swing.JButton();
        pnlDetalle = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblFacturas = new javax.swing.JTable();
        pnlImpresion = new javax.swing.JPanel();
        btnImprimir = new javax.swing.JButton();
        txtIdFacturaImpresion = new javax.swing.JTextField();
        btnLimpiar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnAnulaAbono = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Abono de Clientes");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/imgMovimientoAbonos.png"))); // NOI18N
        setMaximumSize(new java.awt.Dimension(800, 500));
        setMinimumSize(new java.awt.Dimension(800, 500));
        setPreferredSize(new java.awt.Dimension(800, 500));

        pnlEncabezado.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblIdCliente.setText("ID Cliente");

        txtIdCliente.setBackground(new java.awt.Color(102, 102, 102));
        txtIdCliente.setEditable(false);
        txtIdCliente.setForeground(new java.awt.Color(255, 255, 255));
        txtIdCliente.setToolTipText("ID del cliente");

        lblNombreCliente.setText("Nombre");

        lblTelCliente.setText("ID Factura");

        txtIdFactura.setBackground(new java.awt.Color(102, 102, 102));
        txtIdFactura.setEditable(false);
        txtIdFactura.setForeground(new java.awt.Color(255, 255, 255));
        txtIdFactura.setToolTipText("ID del abono, este se genera automaticamente");

        lblDirCliente.setText("Total facturado");

        txtTotalFacturado.setBackground(new java.awt.Color(102, 102, 102));
        txtTotalFacturado.setEditable(false);
        txtTotalFacturado.setForeground(new java.awt.Color(255, 255, 255));
        txtTotalFacturado.setToolTipText("Total que se facturo cuando se creo la venta");

        txtNomPersona.setBackground(new java.awt.Color(102, 102, 102));
        txtNomPersona.setEditable(false);
        txtNomPersona.setForeground(new java.awt.Color(255, 255, 255));
        txtNomPersona.setToolTipText("Nombre de la persona");
        txtNomPersona.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNomPersonaFocusGained(evt);
            }
        });

        lblCelular.setText("Contado");

        txtContado.setBackground(new java.awt.Color(102, 102, 102));
        txtContado.setEditable(false);
        txtContado.setForeground(new java.awt.Color(255, 255, 255));
        txtContado.setToolTipText("La cantidad que canselo al contado");

        lblEmail.setText("Total Abonado");

        txtAbonado.setBackground(new java.awt.Color(102, 102, 102));
        txtAbonado.setEditable(false);
        txtAbonado.setForeground(new java.awt.Color(255, 255, 255));
        txtAbonado.setToolTipText("Total que el cliente lleva abonado");

        lblIdPersona.setText("ID Persona");

        txtIdPersona.setBackground(new java.awt.Color(102, 102, 102));
        txtIdPersona.setEditable(false);
        txtIdPersona.setForeground(new java.awt.Color(255, 255, 255));
        txtIdPersona.setToolTipText("Codigo de la persona en el sistema");

        jLabel1.setText("Abono");

        txtAbono.setBackground(new java.awt.Color(255, 255, 204));
        txtAbono.setToolTipText("Cantidad que esta abonando");
        txtAbono.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAbonoFocusLost(evt);
            }
        });

        lblTelCliente1.setText("Numero");

        txtNumeroFactura.setBackground(new java.awt.Color(102, 102, 102));
        txtNumeroFactura.setEditable(false);
        txtNumeroFactura.setForeground(new java.awt.Color(255, 255, 255));
        txtNumeroFactura.setToolTipText("EL numero de pago");

        lblDirCliente1.setText("Credito");

        txtCredito.setBackground(new java.awt.Color(102, 102, 102));
        txtCredito.setEditable(false);
        txtCredito.setForeground(new java.awt.Color(255, 255, 255));
        txtCredito.setToolTipText("Monto del credito");

        lblEmail1.setText("Dias credito");

        txtDiasCredito.setBackground(new java.awt.Color(102, 102, 102));
        txtDiasCredito.setEditable(false);
        txtDiasCredito.setForeground(new java.awt.Color(255, 255, 255));
        txtDiasCredito.setToolTipText("Dias de credito autorizados");

        txtSaldo.setBackground(new java.awt.Color(102, 102, 102));
        txtSaldo.setEditable(false);
        txtSaldo.setForeground(new java.awt.Color(255, 255, 255));
        txtSaldo.setToolTipText("El saldo que esta pendiente de pago");

        lblSaldo.setText("Saldo");

        jLabel2.setText("Comision");

        txtComision.setBackground(new java.awt.Color(102, 102, 102));
        txtComision.setEditable(false);
        txtComision.setForeground(new java.awt.Color(255, 255, 255));
        txtComision.setToolTipText("Comision ganada por el vendedor");
        txtComision.setCaretColor(new java.awt.Color(255, 255, 255));

        txtFinalizaCredito.setBackground(new java.awt.Color(255, 51, 0));
        txtFinalizaCredito.setEditable(false);
        txtFinalizaCredito.setForeground(new java.awt.Color(255, 255, 255));

        jLabel3.setText("Fecha");

        cbxTipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Efectivo", "Deposito", "Transacci√≥n", "Cheque", "Tarjeta" }));

        jLabel5.setText("Tipo");

        jLabel6.setText("Numero");

        jLabel7.setText("Banco");

        javax.swing.GroupLayout pnlEncabezadoLayout = new javax.swing.GroupLayout(pnlEncabezado);
        pnlEncabezado.setLayout(pnlEncabezadoLayout);
        pnlEncabezadoLayout.setHorizontalGroup(
            pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEncabezadoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTelCliente)
                    .addComponent(lblIdCliente)
                    .addComponent(lblCelular)
                    .addComponent(lblSaldo)
                    .addComponent(jLabel5))
                .addGap(14, 14, 14)
                .addGroup(pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtContado)
                    .addGroup(pnlEncabezadoLayout.createSequentialGroup()
                        .addGroup(pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtIdCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                            .addComponent(txtIdFactura))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblIdPersona)
                            .addComponent(lblTelCliente1))
                        .addGap(14, 14, 14)
                        .addGroup(pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtIdPersona, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                            .addComponent(txtNumeroFactura)))
                    .addComponent(txtSaldo)
                    .addComponent(cbxTipo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(lblDirCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblNombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNomPersona)
                    .addGroup(pnlEncabezadoLayout.createSequentialGroup()
                        .addGroup(pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtNumeroDocumento)
                            .addComponent(txtAbonado)
                            .addComponent(txtAbono)
                            .addComponent(txtTotalFacturado, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblEmail1, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                                .addComponent(lblDirCliente1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtComision, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                            .addComponent(txtCredito, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlEncabezadoLayout.createSequentialGroup()
                                .addComponent(txtDiasCredito, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtFinalizaCredito, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE))
                            .addComponent(txtBanco))))
                .addContainerGap())
        );
        pnlEncabezadoLayout.setVerticalGroup(
            pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEncabezadoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIdCliente)
                    .addComponent(txtIdCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNomPersona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblIdPersona)
                    .addComponent(txtIdPersona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNombreCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIdFactura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTotalFacturado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTelCliente)
                    .addComponent(lblTelCliente1)
                    .addComponent(txtNumeroFactura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCredito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDirCliente)
                    .addComponent(lblDirCliente1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCelular)
                    .addComponent(txtContado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAbonado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDiasCredito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmail)
                    .addComponent(lblEmail1)
                    .addComponent(txtFinalizaCredito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtAbono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSaldo)
                    .addComponent(txtComision, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNumeroDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(txtBanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlBotones.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/imgBotonBuscar.png"))); // NOI18N
        btnBuscar.setActionCommand("buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        lblNitCliente.setText("NIT Cliente");

        txtNitPersona.setToolTipText("Ingresar el NIT de la persona que esta abonando");

        jLabel4.setText("ID Factura");

        btnBuscar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/imgBotonBuscar.png"))); // NOI18N
        btnBuscar1.setActionCommand("buscar");
        btnBuscar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscar1ActionPerformed(evt);
            }
        });

        jLabel8.setText("Nombre");

        btnBuscar2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/imgBotonBuscar.png"))); // NOI18N
        btnBuscar2.setActionCommand("buscar");
        btnBuscar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscar2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBotonesLayout = new javax.swing.GroupLayout(pnlBotones);
        pnlBotones.setLayout(pnlBotonesLayout);
        pnlBotonesLayout.setHorizontalGroup(
            pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBotonesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblNitCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtNitPersona, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBuscar)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtBuscarId, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBuscar1)
                .addGap(33, 33, 33)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtBuscarNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBuscar2)
                .addContainerGap())
        );
        pnlBotonesLayout.setVerticalGroup(
            pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBotonesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBuscar2)
                    .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtBuscarNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8))
                    .addComponent(btnBuscar1)
                    .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(txtBuscarId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnBuscar)
                    .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtNitPersona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblNitCliente)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlDetalle.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tblFacturas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblFacturas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblFacturasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblFacturas);

        javax.swing.GroupLayout pnlDetalleLayout = new javax.swing.GroupLayout(pnlDetalle);
        pnlDetalle.setLayout(pnlDetalleLayout);
        pnlDetalleLayout.setHorizontalGroup(
            pnlDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDetalleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        pnlDetalleLayout.setVerticalGroup(
            pnlDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDetalleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlImpresion.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/imgBotonImpresoraLaser.png"))); // NOI18N
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });

        txtIdFacturaImpresion.setBackground(new java.awt.Color(102, 102, 102));
        txtIdFacturaImpresion.setForeground(new java.awt.Color(255, 255, 255));

        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/imgBotonLimpiar.png"))); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.setToolTipText("");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/imgBotonGuardar.png"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnAnulaAbono.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/imgBotonAnularRegistro.gif"))); // NOI18N
        btnAnulaAbono.setText("Anualar");
        btnAnulaAbono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnulaAbonoActionPerformed(evt);
            }
        });

        jLabel9.setText("Compromiso de Pago");

        javax.swing.GroupLayout pnlImpresionLayout = new javax.swing.GroupLayout(pnlImpresion);
        pnlImpresion.setLayout(pnlImpresionLayout);
        pnlImpresionLayout.setHorizontalGroup(
            pnlImpresionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlImpresionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtIdFacturaImpresion, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnImprimir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAnulaAbono)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGuardar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLimpiar)
                .addContainerGap())
        );
        pnlImpresionLayout.setVerticalGroup(
            pnlImpresionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlImpresionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlImpresionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlImpresionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnLimpiar)
                        .addComponent(btnGuardar)
                        .addComponent(btnAnulaAbono))
                    .addGroup(pnlImpresionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtIdFacturaImpresion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9))
                    .addComponent(btnImprimir))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlEncabezado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlDetalle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlImpresion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlBotones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlEncabezado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlBotones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlDetalle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlImpresion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //VARIABLES GLOBALES
    AccesoExcepciones Mensaje = new AccesoExcepciones();
    AccesoPersona NuevaPersona = new AccesoPersona();
    AccesoCliente NuevoCliente = new AccesoCliente();
    AccesoAbono NuevoAbono = new AccesoAbono();
    ObjetosPersona Persona = new ObjetosPersona();
    ObjetosCliente Cliente = new ObjetosCliente();
    ObjetosAbono Abono = new ObjetosAbono();
    boolean cliente_encontrado = false;
    boolean persona_encontrada = false;

    private void limpiarCampos() {
        btnGuardar.setEnabled(true);
        cliente_encontrado = false;
        persona_encontrada = false;
        txtIdCliente.setText("");
        txtIdPersona.setText("");
        txtNitPersona.setText("");
        txtNomPersona.setText("");
        txtIdFactura.setText("");
        txtTotalFacturado.setText("");
        txtContado.setText("");
        txtAbonado.setText("");
        txtAbono.setText("");
        txtDiasCredito.setText("");
        txtNumeroFactura.setText("");
        txtCredito.setText("");
        txtSaldo.setText("");
        txtComision.setText("");
    }
    
    private String obtenerFechaActual() {
        Date fecha = new Date();
        String hoy = fecha.getDate() + "-" + (fecha.getMonth() + 1) + "-" + (fecha.getYear() + 1900);
        return hoy;
    }
    
    private String obtenerHoraActual() {
        Date fecha = new Date();
        String hoy = fecha.getHours() + ":" + fecha.getMinutes() + ":" + fecha.getSeconds();
        return hoy;
    }

    private void mostrarRegistrosGuardados() {

        String vNit_cliente = txtNitPersona.getText();

        DefaultTableModel tabla = new DefaultTableModel();
        ArrayList<ObjetosAbono> listaAbonos = new ArrayList();

        try {
            listaAbonos = NuevoAbono.buscarCreditosCliente(vNit_cliente, Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText());
        } catch (Error error) {
            Mensaje.manipulacionExcepciones("critico", error.getMessage(), "Buscar Creditos Clientes");
        }

        if (listaAbonos.isEmpty()) {
            Mensaje.manipulacionExcepciones("critico", "No existen Facturas pendientes de pago.", "Registros Guardados");
        } else {
            tabla.addColumn("ID Cliente");
            tabla.addColumn("ID Persona");
            tabla.addColumn("ID Factura");
            tabla.addColumn("NIT");
            tabla.addColumn("Nombre");
            tabla.addColumn("Numero");
            tabla.addColumn("Total");
            tabla.addColumn("Credito");
            tabla.addColumn("Contado");
            tabla.addColumn("Dias");
            tabla.addColumn("Abonado");
            tabla.addColumn("Pendiente");
            tabla.addColumn("Fecha Limite");
            tabla.addColumn("Seire FEL");
            tabla.addColumn("Numero FEL");

            int cCliente = 0;
            int contadorFilas = 1;

            // RECORRO TODA LA LISTA DE PERSONAS
            for (ObjetosAbono xAbono : listaAbonos) {

                tabla.setRowCount(contadorFilas);

                tabla.setValueAt(xAbono.getId_cliente(), cCliente, 0);
                tabla.setValueAt(xAbono.getId_persona(), cCliente, 1);
                tabla.setValueAt(xAbono.getId_factura(), cCliente, 2);
                tabla.setValueAt(xAbono.getNit_persona(), cCliente, 3);
                tabla.setValueAt(xAbono.getNom_persona(), cCliente, 4);
                tabla.setValueAt(xAbono.getFactura(), cCliente, 5);
                tabla.setValueAt(xAbono.getTotal(), cCliente, 6);
                tabla.setValueAt(xAbono.getMonto_credito(), cCliente, 7);
                tabla.setValueAt(xAbono.getMonto_contado(), cCliente, 8);
                tabla.setValueAt(xAbono.getDias_de_credito(), cCliente, 9);
                tabla.setValueAt(xAbono.getTotal_abonado(), cCliente, 10);
                tabla.setValueAt(xAbono.getSaldo_pendiente(), cCliente, 11);
                tabla.setValueAt(xAbono.getFecha_limite(), cCliente, 12);
                tabla.setValueAt(xAbono.getSerie_fel(), cCliente, 13);
                tabla.setValueAt(xAbono.getNumero_fel(), cCliente, 14);
                cCliente++;
                contadorFilas++;

            }
            tblFacturas.setModel(tabla);
        }

    }
    
    private String Log = "";
    
    private void agregarLog(String texto) {
        this.Log = this.Log + "ABONOS" + ": " + texto + " \n";
        Inventory.txtLog.setText(Log);
    }

    private void buscarEnRegistrosGuardados(String forma) {
        
        String vNit_cliente = txtNitPersona.getText();
        String vNombre = txtBuscarNombre.getText();
        String vID = txtBuscarId.getText();
        
        agregarLog("NIT: " + vNit_cliente + " Nombre: " + vNombre + " ID: " + vID);

        if (vNit_cliente != null || vNombre != null || vID != null ) {
            
            DefaultTableModel tabla = new DefaultTableModel();
            ArrayList<ObjetosAbono> listaAbonos = new ArrayList();

            try {
                if (forma.equals("NIT")) {
                    agregarLog("Buscar por NIT");
                    listaAbonos = NuevoAbono.buscarCreditosCliente(vNit_cliente, Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText());
                }
                if (forma.equals("NOMBRE")) {
                    agregarLog("Buscar por Nombre");
                    listaAbonos = NuevoAbono.buscarCreditosClienteNombre(vNombre, Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText());
                }
                if (forma.equals("ID")) {
                    agregarLog("Buscar por ID");
                    listaAbonos = NuevoAbono.buscarCreditosClienteId(vID, Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText());
                }
            } catch (Error error) {
                Mensaje.manipulacionExcepciones("critico", error.getMessage(), "Buscar Creditos Cliente");
            }

            if (listaAbonos.isEmpty()) {
                Mensaje.manipulacionExcepciones("critico", "No existen datos almacenados para este Cliente.", "Buscar en Registros Guardados");
            } else {
                tabla.addColumn("ID Cliente");
                tabla.addColumn("ID Persona");
                tabla.addColumn("ID Fact");
                tabla.addColumn("NIT");
                tabla.addColumn("Nombre");
                tabla.addColumn("Factura");
                tabla.addColumn("Total");
                tabla.addColumn("Credito");
                tabla.addColumn("Contado");
                tabla.addColumn("Dias de credito");
                tabla.addColumn("Total abonado");
                tabla.addColumn("Saldo pendiente");
                tabla.addColumn("fecha_limite");
                tabla.addColumn("Seire FEL");
                tabla.addColumn("Numero FEL");

                int cCliente = 0;
                int contadorFilas = 1;

                // RECORRO TODA LA LISTA DE PERSONAS
                for (ObjetosAbono xAbono : listaAbonos) {

                    // COMPARA CADA ELEMENTO NIT Y NOMBRE DE LA LISTA PARA VER SI ALGUNO ES EL BUSCADO
                    if (xAbono.getNit_persona().indexOf(vNit_cliente) >= 0) {

                        // ESTABLECE EL TAMA√ëO DE LA TABLA
                        tabla.setRowCount(contadorFilas);

                        tabla.setValueAt(xAbono.getId_cliente(), cCliente, 0);
                        tabla.setValueAt(xAbono.getId_persona(), cCliente, 1);
                        tabla.setValueAt(xAbono.getId_factura(), cCliente, 2);
                        tabla.setValueAt(xAbono.getNit_persona(), cCliente, 3);
                        tabla.setValueAt(xAbono.getNom_persona(), cCliente, 4);
                        tabla.setValueAt(xAbono.getFactura(), cCliente, 5);
                        tabla.setValueAt(xAbono.getTotal(), cCliente, 6);
                        tabla.setValueAt(xAbono.getMonto_credito(), cCliente, 7);
                        tabla.setValueAt(xAbono.getMonto_contado(), cCliente, 8);
                        tabla.setValueAt(xAbono.getDias_de_credito(), cCliente, 9);
                        tabla.setValueAt(xAbono.getTotal_abonado(), cCliente, 10);
                        tabla.setValueAt(xAbono.getSaldo_pendiente(), cCliente, 11);
                        tabla.setValueAt(xAbono.getFecha_limite(), cCliente, 12);
                        tabla.setValueAt(xAbono.getSerie_fel(), cCliente, 13);
                        tabla.setValueAt(xAbono.getNumero_fel(), cCliente, 14);

                        cCliente++;
                        contadorFilas++;

                    }
                }
                tblFacturas.setModel(tabla);
            }
        }
    }

    private boolean verificarDatosCliente() {

        boolean vDatosCorrectos = true;

        if (txtAbonado.getText().isEmpty()) {
            Mensaje.manipulacionExcepciones("critico", "Ingrese el monto a abonar.", "Verificar Datos Cliente");
            vDatosCorrectos = false;
        }

        return vDatosCorrectos;
    }
    
    public void imprimirReporte() {
        
        AccesoExcepciones Mensaje = new AccesoExcepciones();

        try {
            
            AccesoInventario Acceso = new AccesoInventario();
            URL url_reporte = this.getClass().getResource("/inventory/reportes/rptAbonoCliente.jasper");
            JasperReport reporte = (JasperReport) JRLoader.loadObject(url_reporte);
            
            //ENVIAR EL PARAMETRO AL REPORTES
            Double credito = Double.parseDouble( txtCredito.getText());
            Double abono = Double.parseDouble( txtAbono.getText());
            Double saldo = Double.parseDouble( txtSaldo.getText());
            Double pendiente = saldo - abono;
            Double abonado = credito - pendiente;
            
            HashMap parametro = new HashMap();
            parametro.put("P_ID_CLIENTE", txtIdCliente.getText());
            parametro.put("P_ID_FACTURA", txtIdFactura.getText());
            parametro.put("P_FECHA", obtenerFechaActual());
            parametro.put("P_NOMBRE", txtNomPersona.getText().toUpperCase());
            parametro.put("P_TOTAL_FACTURADO", txtTotalFacturado.getText());
            parametro.put("P_TOTAL_CREDITO", txtCredito.getText());
            parametro.put("P_TOTAL_ABONADO", String.valueOf(abonado));
            parametro.put("P_SALDO_PENDIENTE", String.valueOf(pendiente));
            parametro.put("P_DIAS_CREDITO", txtDiasCredito.getText());
            parametro.put("P_ABONO_HOY", String.valueOf(abono));
            
            //paarametros nuevos
            parametro.put("P_TIPO", cbxTipo.getSelectedItem().toString());
            parametro.put("P_NUMERO", txtNumeroDocumento.getText());
            parametro.put("P_BANCO", txtBanco.getText());
            
            
            //parametros generales del encabezado
            AccesoSucursal acceso_sucursal = new AccesoSucursal();
            ObjetosSucursal objeto_sucursal = new ObjetosSucursal();

            objeto_sucursal = acceso_sucursal.buscarSucursales(1, Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText());
            
            parametro.put("P_EMPRESA", objeto_sucursal.getNombre_sucursal());
            parametro.put("P_NIT", objeto_sucursal.getNit_sucursal());
            parametro.put("P_DIRECCION_SUCURSAL", objeto_sucursal.getDireccion_sucursal());
            parametro.put("P_TELEFONO", objeto_sucursal.getTelefonos_sucursal());
            parametro.put("P_USUARIO","Impreso por " + Inventory.lblUsuario.getText().toUpperCase());
            parametro.put("P_INFORMACION", obtenerFechaActual() + " " + obtenerHoraActual());
            
            JasperPrint pantalla = JasperFillManager.fillReport(reporte, parametro, Acceso.conectar());
            JInternalFrame ventana = new JInternalFrame("Inventory 3.0");
            ventana.getContentPane().add(new JRViewer(pantalla));
            ventana.setPreferredSize(new Dimension(900, 500));
            ventana.setClosable(true);
            ventana.setMaximizable(true);
            ventana.setResizable(true);
            ventana.setVisible(true);
            ventana.pack();
            
            int ancho = java.awt.Toolkit.getDefaultToolkit().getScreenSize().width;
            int alto = java.awt.Toolkit.getDefaultToolkit().getScreenSize().height;
            int x  = (ancho  - ventana.getWidth() ) / 2;
            int y  = ( alto - ventana.getHeight() - 100 ) / 2;
            
            Inventory.pnlPrincipal.add(ventana);
            
            ventana.setLocation(x, y);
            ventana.setVisible(true);
            ventana.toFront();
            
        } catch (JRException error) {
            Mensaje.manipulacionExcepciones("critico", error.getMessage(), "Reporte Comprobante de Abono");
        }
        
    }

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed

        if (verificarDatosCliente()) {

            if (txtComision.getText().equals("")) {
                Mensaje.manipulacionExcepciones("critico", "Calcule la comision antes de guardar.", "Guardar");
            } else {

                Abono.setNit_persona(txtNitPersona.getText());
                Abono.setId_cliente(Integer.parseInt(txtIdCliente.getText()));
                Abono.setId_persona(Integer.parseInt(txtIdPersona.getText()));
                Abono.setNom_persona(txtNomPersona.getText());
                Abono.setId_factura(Integer.parseInt(txtIdFactura.getText()));
                Abono.setFactura(txtNumeroFactura.getText());
                Abono.setTotal(Float.parseFloat(txtTotalFacturado.getText()));
                Abono.setMonto_credito(Float.parseFloat(txtCredito.getText()));
                Abono.setMonto_contado(Float.parseFloat(txtContado.getText()));
                Abono.setTotal_abonado(Float.parseFloat(txtAbonado.getText()));
                Abono.setDias_de_credito(Integer.parseInt(txtDiasCredito.getText()));
                Abono.setSaldo_pendiente(Float.parseFloat(txtSaldo.getText()));
                Abono.setMonto_abono(Float.parseFloat(txtAbono.getText()));
                Abono.setComision_sobre_abono(Float.parseFloat(txtComision.getText()));
                Abono.setTipo_abono(cbxTipo.getSelectedItem().toString());
                Abono.setNumero_abono(txtNumeroDocumento.getText());
                Abono.setBanco_abono(txtBanco.getText());

                try {
                    String resultado = NuevoAbono.insertarAbono(Abono, Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText());
                    if (resultado.equals("Operacion realizada con exito.")) {
                        imprimirReporte();
                        btnGuardar.setEnabled(false);
                        tblFacturas.removeAll();
                        limpiarCampos();
                        mostrarRegistrosGuardados();
                        Mensaje.manipulacionExcepciones("informacion", "Datos guardados exitosamente.", "Insertar Abono");
                    }
                } catch (Exception error) {
                    btnGuardar.setEnabled(false);
                    Mensaje.manipulacionExcepciones("critico", error.getMessage(), "Insertar Abono");
                }

            }
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        limpiarCampos();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        buscarEnRegistrosGuardados("NIT");
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void tblFacturasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblFacturasMouseClicked

        if (String.valueOf(tblFacturas.getSelectedColumn()).equals("0")) {
            
            int fila_seleccionada = tblFacturas.getSelectedRow();
            int columna_seleccionada = tblFacturas.getSelectedColumn();

            txtIdCliente.setText(String.valueOf(tblFacturas.getValueAt(fila_seleccionada, columna_seleccionada)));
            txtIdPersona.setText(String.valueOf(tblFacturas.getValueAt(fila_seleccionada, columna_seleccionada + 1)));
            txtNomPersona.setText(String.valueOf(tblFacturas.getValueAt(fila_seleccionada, columna_seleccionada + 4)));
            txtIdFactura.setText(String.valueOf(tblFacturas.getValueAt(fila_seleccionada, columna_seleccionada + 2)));
            txtNumeroFactura.setText(String.valueOf(tblFacturas.getValueAt(fila_seleccionada, columna_seleccionada + 5)));
            txtTotalFacturado.setText(String.valueOf(tblFacturas.getValueAt(fila_seleccionada, columna_seleccionada + 6)));
            txtCredito.setText(String.valueOf(tblFacturas.getValueAt(fila_seleccionada, columna_seleccionada + 7)));
            txtContado.setText(String.valueOf(tblFacturas.getValueAt(fila_seleccionada, columna_seleccionada + 8)));
            txtAbonado.setText(String.valueOf(tblFacturas.getValueAt(fila_seleccionada, columna_seleccionada + 10)));
            txtDiasCredito.setText(String.valueOf(tblFacturas.getValueAt(fila_seleccionada, columna_seleccionada + 9)));
            txtSaldo.setText(String.valueOf(tblFacturas.getValueAt(fila_seleccionada, columna_seleccionada + 11)));           
            txtFinalizaCredito.setText(tblFacturas.getValueAt(fila_seleccionada, columna_seleccionada + 12).toString());
            
            txtIdFacturaImpresion.setText(tblFacturas.getValueAt(tblFacturas.getSelectedRow(), 2).toString());

            btnGuardar.setEnabled(true);
            txtAbono.setText("");
        
        }
    }//GEN-LAST:event_tblFacturasMouseClicked

    private void txtAbonoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAbonoFocusLost
        
        float vPorcentaje_comision = NuevoAbono.obtieneComisionEmpleado(Integer.parseInt(txtIdFactura.getText()), Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText());
        float vTotal_abono = Float.parseFloat(txtAbono.getText());
        float vSaldo = Float.parseFloat(txtSaldo.getText());
        float vIva = Float.parseFloat("0.12");
        float vTotal_iva_por_pagar = vTotal_abono * vIva;
        float vTotal_comision = ( vTotal_abono - vTotal_iva_por_pagar ) * ( vPorcentaje_comision / 100);
        Double vComision = matematicas.redondear(Double.parseDouble(String.valueOf(vTotal_comision)));
        
        if(vTotal_abono == 0) {
            Mensaje.manipulacionExcepciones("critico", "Ingrese el Abono que dese acreditar.", "Obtiene Comision Empleado");
        } else {
            if(vTotal_abono > vSaldo) {
                Mensaje.manipulacionExcepciones("critico", "El monto ingresado sobre pasa el Saldo de esta Factura.", "Obtiene Comision Empleado");
            } else {
                txtComision.setText(String.valueOf(vComision));
            }
        }

    }//GEN-LAST:event_txtAbonoFocusLost

    private void txtNomPersonaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNomPersonaFocusGained
        /*
         * if (txtNitPersona.getText().isEmpty()) {
         * txtNitPersona.requestFocus();
         * Mensaje.manipulacionExcepciones("critico", "Ingrese el numero de NIT
         * para este cliente"); }
         */
    }//GEN-LAST:event_txtNomPersonaFocusGained

    private void btnAnulaAbonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnulaAbonoActionPerformed
        if(Double.parseDouble(txtAbonado.getText()) > 0 ) {
            Mensaje.manipulacionExcepciones("critico", "No se puede anular una venta que ya fuea Abonada", "Anular Abono");
        } else {
           NuevoAbono.anularAbono(txtIdFactura.getText(), Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText());
           Mensaje.manipulacionExcepciones("informcion", "Abono Anulado", "Abono Anulado");
        }
    }//GEN-LAST:event_btnAnulaAbonoActionPerformed

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        //ejecuci√≥n del repote seleccionado
        try{
            
            AccesoInventario acceso_inventario = new AccesoInventario();
            AccesoSucursal acceso_sucursal = new AccesoSucursal();
            ObjetosSucursal objeto_sucursal = new ObjetosSucursal();
            
            URL url_reporte = this.getClass().getResource("/inventory/reportes/rptCompromisoDePago.jasper");
            JasperReport reporte = (JasperReport) JRLoader.loadObject(url_reporte);
            HashMap parametro = new HashMap();
            
            //parametros generales del encabezado
            objeto_sucursal = acceso_sucursal.buscarSucursales(1, Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText());
            
            //parametros del reporte
            parametro.put("P_DIRECCION_SUCURSAL", objeto_sucursal.getDireccion_sucursal());
            parametro.put("P_NIT", objeto_sucursal.getNit_sucursal());
            parametro.put("P_NOMBRE_EMPRESA", objeto_sucursal.getNombre_sucursal());
            parametro.put("P_SUCURSAL", objeto_sucursal.getDescripcion_sucursal());
            parametro.put("P_TELEFONO", objeto_sucursal.getTelefonos_sucursal());
            
            //parametro de busqueda
            parametro.put("P_ID_FACTURA", Integer.parseInt(txtIdFacturaImpresion.getText().trim()));
            
            JasperPrint pantalla = JasperFillManager.fillReport(reporte, parametro, acceso_inventario.conectar());
            JInternalFrame ventana = new JInternalFrame("Inventory 3.0");
            ventana.getContentPane().add(new JRViewer(pantalla));
            ventana.setPreferredSize(new Dimension(900, 500));
            ventana.setClosable(true);
            ventana.setMaximizable(true);
            ventana.setResizable(true);
            ventana.setVisible(true);
            ventana.pack();
            
            int ancho = java.awt.Toolkit.getDefaultToolkit().getScreenSize().width;
            int alto = java.awt.Toolkit.getDefaultToolkit().getScreenSize().height;
            int x  = (ancho  - ventana.getWidth() ) / 2;
            int y  = ( alto - ventana.getHeight() - 100 ) / 2;
            
            Inventory.pnlPrincipal.add(ventana);
            
            ventana.setLocation(x, y);
            ventana.setVisible(true);
            ventana.toFront();
            
        } catch (JRException error) {
            Mensaje.manipulacionExcepciones("critico", error.getMessage(), "Reporte de Garantia Cliente");
        }
    }//GEN-LAST:event_btnImprimirActionPerformed

    private void btnBuscar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscar1ActionPerformed
        buscarEnRegistrosGuardados("ID");
    }//GEN-LAST:event_btnBuscar1ActionPerformed

    private void btnBuscar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscar2ActionPerformed
        buscarEnRegistrosGuardados("NOMBRE");
    }//GEN-LAST:event_btnBuscar2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnulaAbono;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnBuscar1;
    private javax.swing.JButton btnBuscar2;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JComboBox cbxTipo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCelular;
    private javax.swing.JLabel lblDirCliente;
    private javax.swing.JLabel lblDirCliente1;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblEmail1;
    private javax.swing.JLabel lblIdCliente;
    private javax.swing.JLabel lblIdPersona;
    private javax.swing.JLabel lblNitCliente;
    private javax.swing.JLabel lblNombreCliente;
    private javax.swing.JLabel lblSaldo;
    private javax.swing.JLabel lblTelCliente;
    private javax.swing.JLabel lblTelCliente1;
    private javax.swing.JPanel pnlBotones;
    private javax.swing.JPanel pnlDetalle;
    private javax.swing.JPanel pnlEncabezado;
    private javax.swing.JPanel pnlImpresion;
    private javax.swing.JTable tblFacturas;
    private javax.swing.JTextField txtAbonado;
    private javax.swing.JTextField txtAbono;
    private javax.swing.JTextField txtBanco;
    private javax.swing.JTextField txtBuscarId;
    private javax.swing.JTextField txtBuscarNombre;
    private javax.swing.JTextField txtComision;
    private javax.swing.JTextField txtContado;
    private javax.swing.JTextField txtCredito;
    private javax.swing.JTextField txtDiasCredito;
    private javax.swing.JTextField txtFinalizaCredito;
    private javax.swing.JTextField txtIdCliente;
    private javax.swing.JTextField txtIdFactura;
    private javax.swing.JTextField txtIdFacturaImpresion;
    private javax.swing.JTextField txtIdPersona;
    private javax.swing.JTextField txtNitPersona;
    private javax.swing.JTextField txtNomPersona;
    private javax.swing.JTextField txtNumeroDocumento;
    private javax.swing.JTextField txtNumeroFactura;
    private javax.swing.JTextField txtSaldo;
    private javax.swing.JTextField txtTotalFacturado;
    // End of variables declaration//GEN-END:variables
}
