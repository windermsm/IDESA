package inventory.vistas;

import inventory.acceso.AccesoExcepciones;
import inventory.acceso.AccesoGarantiaProveedor;
import inventory.acceso.AccesoInventario;
import inventory.acceso.AccesoSucursal;
import inventory.objetos.ObjetoGarantiaProveedor;
import inventory.objetos.ObjetosSucursal;
import java.awt.Dimension;
import java.net.URL;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JInternalFrame;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.swing.JRViewer;

public class wdwBaseDeDAtosHistorialGarantiaProveedor extends javax.swing.JInternalFrame {

    private static String Log = "";
    
    /**
     * Creates new form wdwBaseDeDAtosHistorialDeVentas
     */
    public wdwBaseDeDAtosHistorialGarantiaProveedor() {
        initComponents();
    }
    
    private void agregarLog(String texto) {
        this.Log = this.Log + "HISTORIAL GARANTIA PROVE." + ": " + texto + " \n";
        Inventory.txtLog.setText(Log);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    AccesoGarantiaProveedor acceso_garantia = new AccesoGarantiaProveedor();
    AccesoExcepciones mensaje = new AccesoExcepciones();
    
    private void mostrarRegistrosGuardados(String pFecha_incial , String pFecha_final){
        
        DefaultTableModel tabla = new DefaultTableModel();
        
        ArrayList<ObjetoGarantiaProveedor>  listado = new ArrayList<>();
        
        try{
            listado = acceso_garantia.listarGarantiaProveedor(pFecha_incial, pFecha_final, Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText());
            System.out.println("Cantidad: " + listado.size());
        } catch(Error error) {
            mensaje.manipulacionExcepciones("critico", error.getMessage(), "Listar Anticipos");
            agregarLog(error.getMessage());
        }
        
        //Mostrar los valores de la lista
        System.out.println("Cantidad Registros: " + listado.size());
        if(listado.isEmpty()){
            mensaje.manipulacionExcepciones("critico", "No existen datos almacenados para esta Fecha.", "Mostrar Registros Guardados");
        } else {
            tabla.addColumn("ID Garantia");
            tabla.addColumn("Serie");
            tabla.addColumn("Marca");
            tabla.addColumn("NIT");
            tabla.addColumn("Proveedor");
            tabla.addColumn("Numero Guia");
            tabla.addColumn("Fecha Envio");
            tabla.addColumn("Fecha Solicitud");
            tabla.addColumn("ID Compra");
            tabla.addColumn("ID Producto");
            tabla.addColumn("Descripcion");
            tabla.setRowCount(listado.size());
            
            int c = 0;

            for(ObjetoGarantiaProveedor x : listado) {
                try {
                    tabla.setValueAt(x.getIdRegistro(), c, 0);
                    tabla.setValueAt(x.getSerieproducto(), c, 1);
                    tabla.setValueAt(x.getMarca(), c, 2);
                    tabla.setValueAt(x.getNit(), c, 3);
                    tabla.setValueAt(x.getProveedor(), c, 4);
                    tabla.setValueAt(x.getNumGuia(), c, 5);
                    try {
                        tabla.setValueAt(x.getFechaEnvio().substring(0, 10), c, 6);
                    } catch(Exception Error) {
                      tabla.setValueAt("Sin Fecha", c, 6);  
                    }
                    try {
                        tabla.setValueAt(x.getFechaGuardar().substring(0, 10), c, 7);
                    } catch(Exception Error) {
                        tabla.setValueAt("Sin Fecha", c, 7);
                    }
                    tabla.setValueAt(x.getIdcompra(), c, 8);
                    tabla.setValueAt(x.getIdProducto(), c, 9);
                    tabla.setValueAt(x.getDescripcion(), c, 10);
                    c++;
                } catch (Exception Error) {
                    mensaje.manipulacionExcepciones("critico", "Error en fila " + c + ".\n" + Error.getMessage(), "Mostrar Garantias");
                }
            }
            
            tblDetalleHistorial.setModel(tabla);
        }
    }
    
    private void mostrarRegistrosPorNombre(String pNombre){
        
        DefaultTableModel tabla = new DefaultTableModel();
        
        ArrayList<ObjetoGarantiaProveedor>  listado = new ArrayList();
        
        try{
            listado = acceso_garantia.listarGarantiaProveedorPorNombre(pNombre, Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText());
        }catch(Error error){
            mensaje.manipulacionExcepciones("critico", error.getMessage(), "Listar Anticipos");
            agregarLog(error.getMessage());
        }
        
        //Mostrar los valores de la lista
        if(listado.isEmpty()){
            mensaje.manipulacionExcepciones("critico", "No existen datos almacenados para esta Fecha.", "Mostrar Registros Guardados");
        } else {
            tabla.addColumn("ID Garantia");
            tabla.addColumn("Serie");
            tabla.addColumn("Marca");
            tabla.addColumn("NIT");
            tabla.addColumn("Proveedor");
            tabla.addColumn("Numero Guia");
            tabla.addColumn("Fecha Envio");
            tabla.addColumn("Fecha Solicitud");
            tabla.addColumn("ID Compra");
            tabla.addColumn("ID Producto");
            tabla.addColumn("Descripcion");
            tabla.setRowCount(listado.size());
            
            int c = 0;

            for(ObjetoGarantiaProveedor x : listado) {
                tabla.setValueAt(x.getIdRegistro(), c, 0); 
                tabla.setValueAt(x.getSerieproducto(), c, 1);
                tabla.setValueAt(x.getMarca(), c, 2);
                tabla.setValueAt(x.getNit(), c, 3);
                tabla.setValueAt(x.getProveedor(), c, 4);
                tabla.setValueAt(x.getNumGuia(), c, 5);
                try {
                    tabla.setValueAt(x.getFechaEnvio().substring(0, 10), c, 6);
                } catch (Exception Error) {
                    tabla.setValueAt("Sin Fecha", c, 6);
                }
                try {
                    tabla.setValueAt(x.getFechaGuardar().substring(0, 10), c, 7);
                } catch(Exception Error) {
                    tabla.setValueAt("Sin Fecha", c, 7);
                }
                tabla.setValueAt(x.getIdcompra(), c, 8);
                tabla.setValueAt(x.getIdProducto(), c, 9);
                tabla.setValueAt(x.getDescripcion(), c, 10);
                c++;
            }
            
            tblDetalleHistorial.setModel(tabla);
        }
        
    }
    
    private void mostrarRegistrosPorNit(String pNit){
        
        DefaultTableModel tabla = new DefaultTableModel();
        
        ArrayList<ObjetoGarantiaProveedor>  listado = new ArrayList();
        
        try{
            listado = acceso_garantia.listarGarantiaProveedorPorNit(pNit, Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText());
        }catch(Error error){
            mensaje.manipulacionExcepciones("critico", error.getMessage(), "Listar Anticipos por NIT");
            agregarLog(error.getMessage());
        }
        
        //Mostrar los valores de la lista
        if(listado.isEmpty()){
            mensaje.manipulacionExcepciones("critico", "No existen datos almacenados para esta Fecha.", "Mostrar Registros Guardados");
        } else {
            tabla.addColumn("ID Garantia");
            tabla.addColumn("Serie");
            tabla.addColumn("Marca");
            tabla.addColumn("NIT");
            tabla.addColumn("Proveedor");
            tabla.addColumn("Numero Guia");
            tabla.addColumn("Fecha Envio");
            tabla.addColumn("Fecha Solicitud");
            tabla.addColumn("ID Compra");
            tabla.addColumn("ID Producto");
            tabla.addColumn("Descripcion");
            tabla.setRowCount(listado.size());
            
            int c = 0;

            for(ObjetoGarantiaProveedor x : listado) {
                tabla.setValueAt(x.getIdRegistro(), c, 0); 
                tabla.setValueAt(x.getSerieproducto(), c, 1);
                tabla.setValueAt(x.getMarca(), c, 2);
                tabla.setValueAt(x.getNit(), c, 3);
                tabla.setValueAt(x.getProveedor(), c, 4);
                tabla.setValueAt(x.getNumGuia(), c, 5);
                try {
                    tabla.setValueAt(x.getFechaEnvio().substring(0, 10), c, 6);
                } catch (Exception Error) {
                    tabla.setValueAt("Sin Fecha", c, 6);
                }
                try {
                    tabla.setValueAt(x.getFechaGuardar().substring(0, 10), c, 7);
                } catch(Exception Error) {
                    tabla.setValueAt("Sin Fecha", c, 7);
                }
                tabla.setValueAt(x.getIdcompra(), c, 8);
                tabla.setValueAt(x.getIdProducto(), c, 9);
                tabla.setValueAt(x.getDescripcion(), c, 10);
                c++;
            }
            
            tblDetalleHistorial.setModel(tabla);
        }
        
    }
    
    private void mostrarRegistrosPorSerie(String pSerie){
        
        DefaultTableModel tabla = new DefaultTableModel();
        
        ArrayList<ObjetoGarantiaProveedor>  listado = new ArrayList();
        
        try{
            listado = acceso_garantia.listarGarantiaProveedorPorSerie(pSerie, Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText());
        }catch(Error error){
            mensaje.manipulacionExcepciones("critico", error.getMessage(), "Listar Anticipos por Series");
            agregarLog(error.getMessage());
        }
        
        //Mostrar los valores de la lista
        if(listado.isEmpty()){
            mensaje.manipulacionExcepciones("critico", "No existen datos almacenados para esta Serie.", "Mostrar Registros Guardados");
        } else {
            tabla.addColumn("ID Garantia");
            tabla.addColumn("Serie");
            tabla.addColumn("Marca");
            tabla.addColumn("NIT");
            tabla.addColumn("Proveedor");
            tabla.addColumn("Numero Guia");
            tabla.addColumn("Fecha Envio");
            tabla.addColumn("Fecha Solicitud");
            tabla.addColumn("ID Compra");
            tabla.addColumn("ID Producto");
            tabla.addColumn("Descripcion");
            tabla.setRowCount(listado.size());
            
            int c = 0;

            for(ObjetoGarantiaProveedor x : listado) {
                tabla.setValueAt(x.getIdRegistro(), c, 0); 
                tabla.setValueAt(x.getSerieproducto(), c, 1);
                tabla.setValueAt(x.getMarca(), c, 2);
                tabla.setValueAt(x.getNit(), c, 3);
                tabla.setValueAt(x.getProveedor(), c, 4);
                tabla.setValueAt(x.getNumGuia(), c, 5);
                try {
                    tabla.setValueAt(x.getFechaEnvio().substring(0, 10), c, 6);
                } catch (Exception Error) {
                    tabla.setValueAt("Sin Fecha", c, 6);
                }
                try {
                    tabla.setValueAt(x.getFechaGuardar().substring(0, 10), c, 7);
                } catch(Exception Error) {
                    tabla.setValueAt("Sin Fecha", c, 7);
                }
                tabla.setValueAt(x.getIdcompra(), c, 8);
                tabla.setValueAt(x.getIdProducto(), c, 9);
                tabla.setValueAt(x.getDescripcion(), c, 10);
                c++;
            }
            
            tblDetalleHistorial.setModel(tabla);
        }
        
    }

    private void limpiarTabla() {
        DefaultTableModel modelo = new DefaultTableModel();
        try {
            for (int x = 0; x < modelo.getRowCount(); x++) {
                modelo.removeRow(x);
            }
        } catch (Exception Error) {
            System.out.println("Error al limpira tabla de Componentes: \n" + Error.toString());
        }
        tblDetalleHistorial.setModel(modelo);
    }
    
    public void imprimirReporte() {
        //ejecución del repote seleccionado
        try {

            AccesoInventario acceso_inventario = new AccesoInventario();
            AccesoSucursal acceso_sucursal = new AccesoSucursal();
            ObjetosSucursal objeto_sucursal = new ObjetosSucursal();

            URL url_reporte = this.getClass().getResource("/inventory/reportes/rptGarantiaProveedor.jasper");
            JasperReport reporte = (JasperReport) JRLoader.loadObject(url_reporte);
            HashMap parametro = new HashMap();

            //parametros generales del encabezado
            objeto_sucursal = acceso_sucursal.buscarSucursales(1, Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText());

            //parametros del reporte
            parametro.put("P_DIRECCION_SUCURSAL", objeto_sucursal.getDireccion_sucursal());
            parametro.put("P_NIT", objeto_sucursal.getNit_sucursal());
            parametro.put("P_NOMBRE_EMPRESA", objeto_sucursal.getNombre_sucursal());
            parametro.put("P_SUCURSAL", objeto_sucursal.getDescripcion_sucursal());
            parametro.put("P_TELEFONO", objeto_sucursal.getTelefonos_sucursal());

            //parametro de busqueda
            parametro.put("P_ID_GARANTIA", Integer.parseInt(txtIdGarantia.getText().trim()));

            JasperPrint pantalla = JasperFillManager.fillReport(reporte, parametro, acceso_inventario.conectar());
            JInternalFrame ventana = new JInternalFrame("Inventory 3.0");
            ventana.getContentPane().add(new JRViewer(pantalla));
            ventana.setPreferredSize(new Dimension(900, 500));
            ventana.setClosable(true);
            ventana.setMaximizable(true);
            ventana.setResizable(true);
            ventana.setVisible(true);
            ventana.pack();

            int ancho = java.awt.Toolkit.getDefaultToolkit().getScreenSize().width;
            int alto = java.awt.Toolkit.getDefaultToolkit().getScreenSize().height;
            int x = (ancho - ventana.getWidth()) / 2;
            int y = (alto - ventana.getHeight() - 100) / 2;

            Inventory.pnlPrincipal.add(ventana);

            ventana.setLocation(x, y);
            ventana.setVisible(true);
            ventana.toFront();

        } catch (JRException error) {
            mensaje.manipulacionExcepciones("critico", error.getMessage(), "Reporte de Garantia Proveedor");
        }
    }
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlDetalle = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDetalleHistorial = new javax.swing.JTable();
        pnlBotones = new javax.swing.JPanel();
        lblIdVenta = new javax.swing.JLabel();
        txtIdGarantia = new javax.swing.JTextField();
        btnMostrar = new javax.swing.JButton();
        lblHasta = new javax.swing.JLabel();
        lblFecha1 = new javax.swing.JLabel();
        btnMostrarNombre = new javax.swing.JButton();
        txtNombre = new javax.swing.JTextField();
        txtNit = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtSerie = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtDescripcion = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtFechaInicial = new com.toedter.calendar.JDateChooser();
        txtFechaFinal = new com.toedter.calendar.JDateChooser();
        btnBuscarNit = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtIdProducto = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtMarca = new javax.swing.JTextField();
        txtGuia = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtFechaEnvio = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtIdCompra = new javax.swing.JTextField();
        btnReporte = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtBuscarSerie = new javax.swing.JTextField();
        lblBuscar = new javax.swing.JLabel();
        btnMostarSerie = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Historial de Garantia Proveedor");
        setToolTipText("");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/historialAnticipos.png"))); // NOI18N

        pnlDetalle.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tblDetalleHistorial.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Garantia", "Serie", "Marca", "NIT", "Proveedor", "No. Guia", "Fecha Envio", "Fecha Solicitud", "ID Compra", "ID Producto", "Descripcion"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDetalleHistorial.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDetalleHistorialMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDetalleHistorial);

        javax.swing.GroupLayout pnlDetalleLayout = new javax.swing.GroupLayout(pnlDetalle);
        pnlDetalle.setLayout(pnlDetalleLayout);
        pnlDetalleLayout.setHorizontalGroup(
            pnlDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDetalleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 979, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlDetalleLayout.setVerticalGroup(
            pnlDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDetalleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlBotones.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblIdVenta.setText("ID Garantia");

        txtIdGarantia.setBackground(new java.awt.Color(255, 255, 204));
        txtIdGarantia.setToolTipText("Ingrese el ID de la venta o seleccionela de la lista de busqueda");

        btnMostrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/imgBotonBuscar.png"))); // NOI18N
        btnMostrar.setText("Buscar");
        btnMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarActionPerformed(evt);
            }
        });

        lblHasta.setText("Hasta");

        lblFecha1.setText("Proveedor");

        btnMostrarNombre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/imgBotonBuscar.png"))); // NOI18N
        btnMostrarNombre.setText("Buscar");
        btnMostrarNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarNombreActionPerformed(evt);
            }
        });

        txtNombre.setToolTipText("Espacios en blanco al final y al inico de la plabra colocar el simbolo %");

        txtNit.setToolTipText("");

        jLabel1.setText("NIT");

        txtSerie.setBackground(new java.awt.Color(102, 102, 102));
        txtSerie.setEditable(false);
        txtSerie.setForeground(new java.awt.Color(255, 255, 255));
        txtSerie.setToolTipText("");

        jLabel3.setText("Serie");

        txtDescripcion.setBackground(new java.awt.Color(102, 102, 102));
        txtDescripcion.setEditable(false);
        txtDescripcion.setForeground(new java.awt.Color(255, 255, 255));
        txtDescripcion.setToolTipText("");

        jLabel4.setText("Descripcion");

        txtFechaInicial.setBackground(new java.awt.Color(240, 240, 204));
        txtFechaInicial.setToolTipText("Ingrese la Fecha Inicial.");
        txtFechaInicial.setDateFormatString("yyyy-MM-dd");
        txtFechaInicial.setMaximumSize(new java.awt.Dimension(120, 20));
        txtFechaInicial.setMinimumSize(new java.awt.Dimension(120, 20));
        txtFechaInicial.setPreferredSize(new java.awt.Dimension(120, 20));

        txtFechaFinal.setBackground(new java.awt.Color(240, 240, 204));
        txtFechaFinal.setToolTipText("Ingrese la Fecha Final.");
        txtFechaFinal.setDateFormatString("yyyy-MM-dd");
        txtFechaFinal.setMaximumSize(new java.awt.Dimension(120, 20));
        txtFechaFinal.setMinimumSize(new java.awt.Dimension(120, 20));
        txtFechaFinal.setPreferredSize(new java.awt.Dimension(120, 20));

        btnBuscarNit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/imgBotonBuscar.png"))); // NOI18N
        btnBuscarNit.setText("Buscar");
        btnBuscarNit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarNitActionPerformed(evt);
            }
        });

        jLabel2.setText("ID Produto");

        txtIdProducto.setBackground(new java.awt.Color(102, 102, 102));
        txtIdProducto.setEditable(false);
        txtIdProducto.setForeground(new java.awt.Color(255, 255, 255));

        jLabel5.setText("Marca");

        txtMarca.setBackground(new java.awt.Color(102, 102, 102));
        txtMarca.setEditable(false);
        txtMarca.setForeground(new java.awt.Color(255, 255, 255));

        txtGuia.setBackground(new java.awt.Color(102, 102, 102));
        txtGuia.setEditable(false);
        txtGuia.setForeground(new java.awt.Color(255, 255, 255));

        jLabel7.setText("Fecha Envio");

        txtFechaEnvio.setBackground(new java.awt.Color(102, 102, 102));
        txtFechaEnvio.setEditable(false);
        txtFechaEnvio.setForeground(new java.awt.Color(255, 255, 255));

        jLabel8.setText("ID Compra");

        txtIdCompra.setBackground(new java.awt.Color(102, 102, 102));
        txtIdCompra.setEditable(false);
        txtIdCompra.setForeground(new java.awt.Color(255, 255, 255));

        btnReporte.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/imgBotonImpresoraLaser.png"))); // NOI18N
        btnReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReporteActionPerformed(evt);
            }
        });

        jLabel10.setText("No. Guia");

        jLabel6.setText("Desde");

        lblBuscar.setText("Serie");

        btnMostarSerie.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/imgBotonBuscar.png"))); // NOI18N
        btnMostarSerie.setText("Buscar");
        btnMostarSerie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostarSerieActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBotonesLayout = new javax.swing.GroupLayout(pnlBotones);
        pnlBotones.setLayout(pnlBotonesLayout);
        pnlBotonesLayout.setHorizontalGroup(
            pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBotonesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBotonesLayout.createSequentialGroup()
                        .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5))
                        .addGap(36, 36, 36))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBotonesLayout.createSequentialGroup()
                        .addComponent(lblIdVenta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtMarca)
                    .addGroup(pnlBotonesLayout.createSequentialGroup()
                        .addComponent(txtIdGarantia, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnReporte))
                    .addComponent(txtSerie))
                .addGap(18, 18, 18)
                .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(pnlBotonesLayout.createSequentialGroup()
                        .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnlBotonesLayout.createSequentialGroup()
                                .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNit, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtIdProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(12, 12, 12)
                                .addComponent(btnBuscarNit))
                            .addComponent(txtDescripcion))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6)
                    .addComponent(jLabel10)
                    .addComponent(lblFecha1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBotonesLayout.createSequentialGroup()
                        .addComponent(txtFechaInicial, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblHasta)
                        .addGap(18, 18, 18)
                        .addComponent(txtFechaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtNombre)
                    .addGroup(pnlBotonesLayout.createSequentialGroup()
                        .addComponent(txtGuia, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7)
                            .addComponent(lblBuscar))
                        .addGap(28, 28, 28)
                        .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlBotonesLayout.createSequentialGroup()
                                .addComponent(txtFechaEnvio, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8))
                            .addComponent(txtBuscarSerie))))
                .addGap(18, 18, 18)
                .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnMostrarNombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtIdCompra, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnMostrar, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                    .addComponent(btnMostarSerie, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(19, 19, 19))
        );
        pnlBotonesLayout.setVerticalGroup(
            pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBotonesLayout.createSequentialGroup()
                .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBotonesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlBotonesLayout.createSequentialGroup()
                                .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(btnBuscarNit)
                                        .addComponent(txtNit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel6))
                                    .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(btnReporte)
                                        .addComponent(jLabel1))
                                    .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtIdGarantia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblIdVenta)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBotonesLayout.createSequentialGroup()
                                .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtFechaFinal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtFechaInicial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlBotonesLayout.createSequentialGroup()
                                        .addComponent(btnMostrar)
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addGap(6, 6, 6))))
                    .addComponent(lblHasta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBotonesLayout.createSequentialGroup()
                            .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtSerie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3)
                                .addComponent(jLabel2)
                                .addComponent(txtIdProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(11, 11, 11)
                            .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4)
                                .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBotonesLayout.createSequentialGroup()
                            .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnMostrarNombre)
                                .addComponent(lblFecha1))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtIdCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))
                                .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtGuia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7)
                                    .addComponent(txtFechaEnvio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10)))
                            .addGap(1, 1, 1)))
                    .addGroup(pnlBotonesLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(11, 11, 11)
                .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnMostarSerie)
                    .addComponent(txtBuscarSerie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBuscar))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlDetalle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlBotones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlBotones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlDetalle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarActionPerformed
        limpiarTabla();
        if (txtFechaInicial.getDate().toString().equals("") || txtFechaFinal.getDate().toString().equals("")) {
            mensaje.manipulacionExcepciones("critico", "Por favor ingrese la Fechas.", "Boton Buscar");
        } else {
            String desde = ( txtFechaInicial.getDate().getYear() + 1900 ) + "-" + ( txtFechaInicial.getDate().getMonth() + 1 ) + "-" + txtFechaInicial.getDate().getDate();
            String hasta = ( txtFechaFinal.getDate().getYear() + 1900 ) + "-" + ( txtFechaFinal.getDate().getMonth() + 1 ) + "-" + txtFechaFinal.getDate().getDate();
            mostrarRegistrosGuardados(desde, hasta);
        }
    }//GEN-LAST:event_btnMostrarActionPerformed

    private void tblDetalleHistorialMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDetalleHistorialMouseClicked
        
        if (String.valueOf(tblDetalleHistorial.getSelectedColumn()).equals("0")) {
            int fila_seleccionada = tblDetalleHistorial.getSelectedRow();
            txtIdGarantia.setText(tblDetalleHistorial.getValueAt(fila_seleccionada, 0).toString());
            txtSerie.setText(tblDetalleHistorial.getValueAt(fila_seleccionada, 1).toString());
            txtMarca.setText(tblDetalleHistorial.getValueAt(fila_seleccionada, 2).toString());
            txtNit.setText(tblDetalleHistorial.getValueAt(fila_seleccionada, 3).toString());
            txtNombre.setText(tblDetalleHistorial.getValueAt(fila_seleccionada, 4).toString());
            txtGuia.setText(tblDetalleHistorial.getValueAt(fila_seleccionada, 5).toString());
            txtFechaEnvio.setText(tblDetalleHistorial.getValueAt(fila_seleccionada, 7).toString());
            txtIdCompra.setText(tblDetalleHistorial.getValueAt(fila_seleccionada, 8).toString());
            txtIdProducto.setText(tblDetalleHistorial.getValueAt(fila_seleccionada, 9).toString());
            txtDescripcion.setText(tblDetalleHistorial.getValueAt(fila_seleccionada, 10).toString());
        }
    }//GEN-LAST:event_tblDetalleHistorialMouseClicked

    private void btnMostrarNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarNombreActionPerformed
        limpiarTabla();
        if (txtNombre.getText().isEmpty()) {
            mensaje.manipulacionExcepciones("critico", "Por favor ingrese el nombre del Proveedor.", "Boton Buscar Proveedor");
        } else {
            mostrarRegistrosPorNombre(txtNombre.getText());
        }
    }//GEN-LAST:event_btnMostrarNombreActionPerformed

    private void btnBuscarNitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarNitActionPerformed
        limpiarTabla();
        if (txtNit.getText().isEmpty()) {
            mensaje.manipulacionExcepciones("critico", "Por favor ingrese el numero de NIT.", "Buscar por NIT");
        } else {
            mostrarRegistrosPorNit(txtNit.getText());
        } 
    }//GEN-LAST:event_btnBuscarNitActionPerformed

    private void btnReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReporteActionPerformed
        if(txtIdGarantia.getText().isEmpty()) {
            mensaje.manipulacionExcepciones("critico", "No se puede mostrar el reporte porque no esta guardado el registro.", "Reporte Anticipo");
        } else {
            imprimirReporte();
        }
    }//GEN-LAST:event_btnReporteActionPerformed

    private void btnMostarSerieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostarSerieActionPerformed
        limpiarTabla();
        if (lblBuscar.getText().isEmpty()) {
            mensaje.manipulacionExcepciones("critico", "Por favor ingrese el numero de Seire.", "Buscar por Serie");
        } else {
            mostrarRegistrosPorSerie(txtBuscarSerie.getText().trim().replaceAll("'", "´").toUpperCase());
        } 
    }//GEN-LAST:event_btnMostarSerieActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarNit;
    private javax.swing.JButton btnMostarSerie;
    private javax.swing.JButton btnMostrar;
    private javax.swing.JButton btnMostrarNombre;
    private javax.swing.JButton btnReporte;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBuscar;
    private javax.swing.JLabel lblFecha1;
    private javax.swing.JLabel lblHasta;
    private javax.swing.JLabel lblIdVenta;
    private javax.swing.JPanel pnlBotones;
    private javax.swing.JPanel pnlDetalle;
    private javax.swing.JTable tblDetalleHistorial;
    private javax.swing.JTextField txtBuscarSerie;
    public static javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextField txtFechaEnvio;
    private com.toedter.calendar.JDateChooser txtFechaFinal;
    private com.toedter.calendar.JDateChooser txtFechaInicial;
    private javax.swing.JTextField txtGuia;
    private javax.swing.JTextField txtIdCompra;
    private javax.swing.JTextField txtIdGarantia;
    private javax.swing.JTextField txtIdProducto;
    private javax.swing.JTextField txtMarca;
    private javax.swing.JTextField txtNit;
    private javax.swing.JTextField txtNombre;
    public static javax.swing.JTextField txtSerie;
    // End of variables declaration//GEN-END:variables
}
