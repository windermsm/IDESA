/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package inventory.vistas;

import inventory.acceso.*;
import inventory.objetos.*;
import inventory.servicios.Matematicas;
import java.awt.Dimension;
import java.io.IOException;
import java.net.URL;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import javax.swing.JInternalFrame;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.swing.JRViewer;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Megabyte Soluciones Integrales Guatemala
 */

public class wdwCatalogoSerieConsulta extends javax.swing.JInternalFrame {
    String UsuarioLogeado = null;
    String rolUsuario = null;
    AccesoArchivo archivo = new AccesoArchivo();
    Matematicas matematica = new Matematicas();
    AccesoProforma proforma = new AccesoProforma();
    AccesoDetalleProforma detalle_proforma = new AccesoDetalleProforma();
    AccesoCliente cliente = new AccesoCliente();
    /**
     * Creates new form wdwMovimientoVentaDeProductos
     */
    public wdwCatalogoSerieConsulta() {
        initComponents();
        UsuarioLogeado = Inventory.lblUsuario.getText();
        rolUsuario = Inventory.lblRol.getText();
        if (rolUsuario.equals("Administrador") || rolUsuario.equals("Jefe Sucursal")) {
            btnReporte.setEnabled(true);
        } else {
            btnReporte.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlEncabezado = new javax.swing.JPanel();
        btnConsultarOrdenServicio = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtIdProducto = new javax.swing.JTextField();
        txtSerieProducto = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtDescripcionProducto = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnBuscarProducto = new javax.swing.JButton();
        btnBuscarSerie = new javax.swing.JButton();
        btnBuscarEnComentarios = new javax.swing.JButton();
        btnReporte = new javax.swing.JButton();
        btnReporte2 = new javax.swing.JButton();
        txtSerie = new javax.swing.JTextField();
        txtNumero = new javax.swing.JTextField();
        txtAutorizacion = new javax.swing.JTextField();
        pnlDetalleSerie = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblListadoEquipos = new javax.swing.JTable();
        pnlDetalle = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblComponentes = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Series");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/imgBotonCodigoDeBarraMini.png"))); // NOI18N
        setMinimumSize(new java.awt.Dimension(900, 450));
        setPreferredSize(new java.awt.Dimension(900, 450));

        pnlEncabezado.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnConsultarOrdenServicio.setText("Buscar");
        btnConsultarOrdenServicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarOrdenServicioActionPerformed(evt);
            }
        });

        jLabel1.setText("ID Producto");

        txtSerieProducto.setBackground(new java.awt.Color(255, 255, 209));

        jLabel2.setText("No. Serie");

        txtDescripcionProducto.setBackground(new java.awt.Color(102, 102, 102));
        txtDescripcionProducto.setEditable(false);
        txtDescripcionProducto.setForeground(new java.awt.Color(255, 255, 255));

        jLabel3.setText("Descripcion");

        btnBuscarProducto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/imgBotonBuscar.png"))); // NOI18N
        btnBuscarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarProductoActionPerformed(evt);
            }
        });

        btnBuscarSerie.setText("Buscar");
        btnBuscarSerie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarSerieActionPerformed(evt);
            }
        });

        btnBuscarEnComentarios.setText("Buscar Comentario");
        btnBuscarEnComentarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarEnComentariosActionPerformed(evt);
            }
        });

        btnReporte.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/imgMovimientoCompraDeProductos.png"))); // NOI18N
        btnReporte.setActionCommand("btnReporte");
        btnReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReporteActionPerformed(evt);
            }
        });

        btnReporte2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/imgMovimientoVentaDeProductos.png"))); // NOI18N
        btnReporte2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReporte2ActionPerformed(evt);
            }
        });

        txtSerie.setBackground(new java.awt.Color(102, 102, 102));
        txtSerie.setEditable(false);
        txtSerie.setForeground(new java.awt.Color(255, 255, 255));

        txtNumero.setBackground(new java.awt.Color(102, 102, 102));
        txtNumero.setEditable(false);
        txtNumero.setForeground(new java.awt.Color(255, 255, 255));

        txtAutorizacion.setBackground(new java.awt.Color(102, 102, 102));
        txtAutorizacion.setEditable(false);
        txtAutorizacion.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout pnlEncabezadoLayout = new javax.swing.GroupLayout(pnlEncabezado);
        pnlEncabezado.setLayout(pnlEncabezadoLayout);
        pnlEncabezadoLayout.setHorizontalGroup(
            pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEncabezadoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addGap(20, 20, 20)
                .addGroup(pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlEncabezadoLayout.createSequentialGroup()
                        .addComponent(txtSerieProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscarSerie)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnReporte)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnReporte2))
                    .addComponent(txtDescripcionProducto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtSerie))
                .addGap(18, 18, 18)
                .addGroup(pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtIdProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlEncabezadoLayout.createSequentialGroup()
                        .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtAutorizacion)))
                .addGap(18, 18, 18)
                .addGroup(pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlEncabezadoLayout.createSequentialGroup()
                        .addComponent(btnBuscarProducto)
                        .addGap(18, 18, 18)
                        .addComponent(btnConsultarOrdenServicio))
                    .addComponent(btnBuscarEnComentarios, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlEncabezadoLayout.setVerticalGroup(
            pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEncabezadoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtSerieProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel1)
                        .addComponent(txtIdProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnConsultarOrdenServicio)
                        .addComponent(btnBuscarSerie))
                    .addComponent(btnBuscarProducto)
                    .addComponent(btnReporte)
                    .addComponent(btnReporte2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDescripcionProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(btnBuscarEnComentarios)
                    .addComponent(txtSerie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAutorizacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlDetalleSerie.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tblListadoEquipos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id Serie", "Id Compra", "Id Producto", "Id Factura", "Id Orden de servicio", "Descripción", "Número de serie", "Estado", "Garantia Proveedor", "Garantia Cliente"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblListadoEquipos.getTableHeader().setReorderingAllowed(false);
        tblListadoEquipos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblListadoEquiposMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblListadoEquipos);

        javax.swing.GroupLayout pnlDetalleSerieLayout = new javax.swing.GroupLayout(pnlDetalleSerie);
        pnlDetalleSerie.setLayout(pnlDetalleSerieLayout);
        pnlDetalleSerieLayout.setHorizontalGroup(
            pnlDetalleSerieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDetalleSerieLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        pnlDetalleSerieLayout.setVerticalGroup(
            pnlDetalleSerieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDetalleSerieLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlDetalle.setBackground(new java.awt.Color(204, 255, 204));
        pnlDetalle.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tblComponentes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID Componente", "ID Serie", "ID Producto", "Serie", "Descripcion", "Comentario", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblComponentes.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tblComponentes.getTableHeader().setReorderingAllowed(false);
        tblComponentes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblComponentesMouseClicked(evt);
            }
        });
        tblComponentes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblComponentesKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblComponentes);

        javax.swing.GroupLayout pnlDetalleLayout = new javax.swing.GroupLayout(pnlDetalle);
        pnlDetalle.setLayout(pnlDetalleLayout);
        pnlDetalleLayout.setHorizontalGroup(
            pnlDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDetalleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 840, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlDetalleLayout.setVerticalGroup(
            pnlDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDetalleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlEncabezado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlDetalleSerie, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlDetalle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlEncabezado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlDetalleSerie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlDetalle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //VARIABLES GLOBALES
    ObjetosFactura Factura = new ObjetosFactura();
    ObjetosProducto Producto = new ObjetosProducto();
    ObjetosDetalleFactura Detalle = new ObjetosDetalleFactura();
    AccesoCliente NuevoCliente = new AccesoCliente();
    AccesoFactura NuevaFactura = new AccesoFactura();
    AccesoPersona NuevaPersona = new AccesoPersona();
    AccesoProducto NuevoProducto = new AccesoProducto();
    AccesoDetalleFactura NuevoDetalleFactura = new AccesoDetalleFactura();
    AccesoExcepciones Mensaje = new AccesoExcepciones();
    
    Date fecha = new Date();
    float total_factura = 0;
    float cantidad = 0;
    float precio = 0;
    float total_iva = 0;
    
    //SE COLOCARON PUBLICAS PARA PODER UTILIZARLAS EN EL CATALOGO DE PRODUCTOS
    //YA QUE DESDE ALLI SE PUEDE IMPORTAR UN CODIGO SELECCIONADO PRESIONANDO
    //SOBRE EL CODIGO QUE QUIERE ENVIAR Y LUEGO EL BOTON EVIAR AL DETALLE DE VENTA
    public int fila_seleccionada = 0;
    public int columna_seleccionada = 0;
    
    AccesoDetalleSerie acceso_componente = new AccesoDetalleSerie();
    ArrayList<ObjetosDetalleSerie> listado_componentes = new ArrayList<>();
    DefaultTableModel modelo_componente = new DefaultTableModel();
    
    private ObjetosProducto obtenerDatosProducto(String pId_producto){
        
        ArrayList<ObjetosProducto> BuscarProducto = new ArrayList();
        ObjetosProducto Producto = new ObjetosProducto();
        
        //CONSULTAR EL ID DE PRODUCTO PARA OBTENER LOS DATOS
        try{
            BuscarProducto = NuevoProducto.buscarProducto(pId_producto, Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText());
        }catch(Exception error){
            Mensaje.manipulacionExcepciones("critico", "Ocurrio un error al consultar el codigo del producto", "Obtener Datos Producto");
        }
        
        //EVALUAR EL RESULTADO DE LA BUSQUEDA
        if(BuscarProducto.isEmpty()){
            Mensaje.manipulacionExcepciones("informacion", "Este Codigo de Producto no existe en su Base de Datos", "Obtener Datos Producto");
        } else {
            if(BuscarProducto.size()>1){
                Mensaje.manipulacionExcepciones("critico", "Existe mas de un producto con este codigo", "Obtener Datos Producto");
            } else {
                Producto.setId_producto(BuscarProducto.get(0).getId_producto());
                Producto.setId_proveedor(BuscarProducto.get(0).getId_proveedor());
                Producto.setMarca_producto(BuscarProducto.get(0).getMarca_producto());
                Producto.setDesc_producto(BuscarProducto.get(0).getDesc_producto());
                Producto.setPrecio_compra_producto(BuscarProducto.get(0).getPrecio_compra_producto());
                Producto.setPrecio_est_producto(BuscarProducto.get(0).getPrecio_est_producto());
                Producto.setExi_producto(BuscarProducto.get(0).getExi_producto());
                Producto.setUnidad_medida_producto(BuscarProducto.get(0).getUnidad_medida_producto());
                Producto.setMaximo_producto(BuscarProducto.get(0).getMaximo_producto());
                Producto.setMinimo_producto(BuscarProducto.get(0).getMinimo_producto());
                Producto.setPrj_est_producto(BuscarProducto.get(0).getPrj_est_producto());
                Producto.setPrj_min_producto(BuscarProducto.get(0).getPrj_min_producto());
                Producto.setPrecio_min_producto(BuscarProducto.get(0).getPrecio_min_producto());
            }
        }
        
        return Producto;
    }
    
    private void obtenerDatosCliente(String pNit_persona){
        
        ArrayList<ObjetosPersona> BuscarPersona = new ArrayList();
        ArrayList<ObjetosCliente> BuscarCliente = new ArrayList();
        
        //CONSULTAR EL NUMERO DE NIT DE LA PERSONA
        try{
            BuscarPersona = NuevaPersona.buscarPersona(pNit_persona, Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText());
        }catch(Exception error){
            Mensaje.manipulacionExcepciones("critico", "Ocurrio un error al buscar el nombre del Cliente \n" + error.getMessage(), "Obtener Datos Cliente");
        }
        
        //EVALUAR EL RESULTADO DE LA BUSQUEDA
        if(BuscarPersona.isEmpty()){
            Mensaje.manipulacionExcepciones("critico", "No existen datos de esta Persona en la Base de Datos.", "Obtener Datos Cliente");
        } else {
            if(BuscarPersona.size()>1){
                Mensaje.manipulacionExcepciones("critico", "Existe mas de una persona con este numero de NIT.", "Obtener Datos Cliente");
            } else {
        
            }
        }
        
        //CONSULTAR EL NIT DEL CLIENTE
        try{
            BuscarCliente = NuevoCliente.buscarCliente(BuscarPersona.get(0).getId_persona(), Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText());
        }catch(Exception error){
            Mensaje.manipulacionExcepciones("critico", "Ocurrio un error al buscar los datos del Cliente. \n" + error.getMessage(), "Consultar NIT Cliente");
        }
        
        if (BuscarCliente.isEmpty()) {
            Mensaje.manipulacionExcepciones("interrogante", "Desea crear este cliente en la Base de Datos.", "Buscar Cliente");
        } else {
            if (BuscarCliente.size() > 1) {
                Mensaje.manipulacionExcepciones("critico", "Se encontro mas de un Cliente con este numero de NIT.", "Buscar Cliente");
            }
        }
        
        BuscarPersona.removeAll(BuscarCliente);
        BuscarCliente.removeAll(BuscarCliente);
    }
    
    
     private void limpiarTablaDeComponentes() {
        //limpiar la tabla por si tiene informacion de otros componente
        try {
            for (int x=0; x < modelo_componente.getRowCount(); x++) {
                modelo_componente.removeRow(x);
            }
        } catch (Exception Error) {
            System.out.println("Error al limpira tabla de Componentes: \n" + Error.toString());
        }

        tblComponentes.setModel(modelo_componente);
    }
    
    private void cargarListadoComponentes() {
        
        limpiarTablaDeComponentes();
        modelo_componente.setColumnCount(0);
        
        modelo_componente.addColumn("ID Componente");
        modelo_componente.addColumn("ID Serie");
        modelo_componente.addColumn("ID Producto");
        modelo_componente.addColumn("Serie");
        modelo_componente.addColumn("Descripcion");
        modelo_componente.addColumn("Estado");

        //buscar componentes en la base de datos
        String id_serie = tblListadoEquipos.getValueAt(tblListadoEquipos.getSelectedRow(), 0).toString(); 
        listado_componentes = acceso_componente.listarDetalleSerie(id_serie, Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText()); 
        Iterator<ObjetosDetalleSerie> iterador = listado_componentes.iterator();
        modelo_componente.setRowCount(listado_componentes.size());  System.out.println(listado_componentes.size());

        int contador = 0;

        while (iterador.hasNext()) {
            ObjetosDetalleSerie componente = iterador.next(); 
            modelo_componente.setValueAt(componente.getId_d_serie(), contador, 0);
            modelo_componente.setValueAt(componente.getId_serie(), contador, 1);
            modelo_componente.setValueAt(componente.getId_producto(), contador, 2);
            modelo_componente.setValueAt(componente.getNumero_serie(), contador, 3);
            modelo_componente.setValueAt(componente.getDescripcion(), contador, 4);
            modelo_componente.setValueAt(componente.getEstado(), contador, 5);
            contador++;
        }

        tblComponentes.setModel(modelo_componente);
        tblComponentes.setEnabled(true);

        //Habilitar los botones para ingresar informacion
        txtIdProducto.setEnabled(true);
        btnBuscarProducto.setEnabled(true);

    }
    
        
    
    private void btnConsultarOrdenServicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarOrdenServicioActionPerformed
        
        if(!txtIdProducto.getText().trim().equals("")){

            try {
                
                AccesoSerie accesoserie = new AccesoSerie();
                AccesoDetalleSerie accesodetalleserie = new AccesoDetalleSerie();
                ObjetosSerie obj = accesoserie.buscarSeriePorIdProducto(txtIdProducto.getText().trim(), Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText());
                
                tblListadoEquipos.setValueAt(String.valueOf(obj.getId_serie()),0,0);
                tblListadoEquipos.setValueAt(obj.getId_compra(),0,1);
                tblListadoEquipos.setValueAt(obj.getId_producto(),0,2);
                tblListadoEquipos.setValueAt(obj.getId_factura(),0,3);
                tblListadoEquipos.setValueAt(obj.getId_orden_servicio(),0,4);
                tblListadoEquipos.setValueAt(obj.getDescripcion(),0,5);
                tblListadoEquipos.setValueAt(obj.getNumero_serie(),0,6);
                tblListadoEquipos.setValueAt(obj.getEstado(),0,7);
                tblListadoEquipos.setValueAt(String.valueOf(obj.getFecha_limite_garantia_proveedor()), 0, 8);
                tblListadoEquipos.setValueAt(String.valueOf(obj.getFecha_limite_garantia_cliente()), 0, 9);
                
            } catch (Exception e) {
                
                Mensaje.manipulacionExcepciones("critico", "Error al buscar la Serie", "Buscar Serie");
            }
            
        }else{
            Mensaje.manipulacionExcepciones("informacion", "Ingrese los valores solicitados.", "Consultar Orden Servicio");
        }
    }//GEN-LAST:event_btnConsultarOrdenServicioActionPerformed

    private void btnBuscarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarProductoActionPerformed
        wdwConsultaProductos ConsultaProductos = new wdwConsultaProductos("Orden de Servicio");
        int ancho = Inventory.pnlPrincipal.getWidth();
        int alto = Inventory.pnlPrincipal.getHeight();
        int x = (ancho / 2) - (ConsultaProductos.getWidth() / 2);
        int y = ((alto / 2) - (ConsultaProductos.getHeight() / 2)) / 2;
        ConsultaProductos.setVisible(true);
        Inventory.pnlPrincipal.add(ConsultaProductos);
        ConsultaProductos.toFront();
        ConsultaProductos.setLocation(x, y);
        wdwConsultaProductos.btnAgregarEquipo.setEnabled(true);
    }//GEN-LAST:event_btnBuscarProductoActionPerformed

    private void tblListadoEquiposMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblListadoEquiposMouseClicked
        cargarListadoComponentes();
        //consultar los datos de la compra del producto
        AccesoCompra acceso_compra = new AccesoCompra();
        ObjetosCompra objeto_compra = new ObjetosCompra();
        
        try {
            String id = tblListadoEquipos.getValueAt(tblListadoEquipos.getSelectedRow(), 1).toString();
            objeto_compra = acceso_compra.seleccionarCompraPorID(id, Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText());
            txtSerie.setText(objeto_compra.getSerie_factura_compra());
            txtNumero.setText(objeto_compra.getNumero_factura_compra());
            txtAutorizacion.setText(objeto_compra.getFolio_factura_compra());
        } catch(Exception Error) {
            txtSerie.setText("0");
            txtNumero.setText("0");
            txtAutorizacion.setText("0");
            Mensaje.manipulacionExcepciones("critico", "Ocurrio un error al buscar datos de la Factura de Compra.", "Buscar Compra");
        }
   }//GEN-LAST:event_tblListadoEquiposMouseClicked

    private void tblComponentesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblComponentesMouseClicked

   }//GEN-LAST:event_tblComponentesMouseClicked

    private void tblComponentesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblComponentesKeyPressed

   }//GEN-LAST:event_tblComponentesKeyPressed

    private void btnBuscarSerieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarSerieActionPerformed
        
        if(!txtSerieProducto.getText().trim().equals("")){

            try {
                
                AccesoSerie accesoserie = new AccesoSerie();
                AccesoDetalleSerie accesodetalleserie = new AccesoDetalleSerie();
                ObjetosSerie obj = accesoserie.buscarNumeroSerie(txtSerieProducto.getText().trim().replaceAll("'", "´").toUpperCase(), Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText());
                
                tblListadoEquipos.setValueAt(String.valueOf(obj.getId_serie()),0,0);
                tblListadoEquipos.setValueAt(obj.getId_compra(),0,1);
                tblListadoEquipos.setValueAt(obj.getId_producto(),0,2);
                tblListadoEquipos.setValueAt(obj.getId_factura(),0,3);
                tblListadoEquipos.setValueAt(obj.getId_orden_servicio(),0,4);
                tblListadoEquipos.setValueAt(obj.getDescripcion(),0,5);
                tblListadoEquipos.setValueAt(obj.getNumero_serie(),0,6);
                tblListadoEquipos.setValueAt(obj.getEstado(),0,7);
                tblListadoEquipos.setValueAt(String.valueOf(obj.getFecha_limite_garantia_proveedor()), 0, 8);
                tblListadoEquipos.setValueAt(String.valueOf(obj.getFecha_limite_garantia_cliente()), 0, 9);
                
            } catch (Exception e) {
                
                Mensaje.manipulacionExcepciones("critico", "Error al buscar la Serie", "Buscar Serie");
            }
            
        }else{
            Mensaje.manipulacionExcepciones("informacion", "Ingrese el numero de Serie.", "Consultar Serie");
        }
        
    }//GEN-LAST:event_btnBuscarSerieActionPerformed

    private void btnBuscarEnComentariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarEnComentariosActionPerformed
        
        if(!txtSerieProducto.getText().trim().equals("")){

            try {
                
                AccesoSerie accesoserie = new AccesoSerie();
                AccesoDetalleSerie accesodetalleserie = new AccesoDetalleSerie();
                ObjetosSerie obj = accesoserie.buscarSerieEnComentario(txtSerieProducto.getText(), Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText());
                
                tblListadoEquipos.setValueAt(String.valueOf(obj.getId_serie()),0,0);
                tblListadoEquipos.setValueAt(obj.getId_compra(),0,1);
                tblListadoEquipos.setValueAt(obj.getId_producto(),0,2);
                tblListadoEquipos.setValueAt(obj.getId_factura(),0,3);
                tblListadoEquipos.setValueAt(obj.getId_orden_servicio(),0,4);
                tblListadoEquipos.setValueAt(obj.getDescripcion(),0,5);
                tblListadoEquipos.setValueAt(obj.getNumero_serie(),0,6);
                tblListadoEquipos.setValueAt(obj.getEstado(),0,7);
                tblListadoEquipos.setValueAt(String.valueOf(obj.getFecha_limite_garantia_proveedor()), 0, 8);
                tblListadoEquipos.setValueAt(String.valueOf(obj.getFecha_limite_garantia_cliente()), 0, 9);
                
            } catch (Exception e) {
                
                Mensaje.manipulacionExcepciones("critico", "Error al buscar la Serie", "Buscar Serie");
            }
            
        }else{
            Mensaje.manipulacionExcepciones("informacion", "Ingrese el numero de Serie.", "Consultar Serie");
        }
        
    }//GEN-LAST:event_btnBuscarEnComentariosActionPerformed

    private void btnReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReporteActionPerformed

        try {

            AccesoInventario acceso_inventario = new AccesoInventario();
            AccesoSucursal acceso_sucursal = new AccesoSucursal();
            ObjetosSucursal objeto_sucursal = new ObjetosSucursal();

            URL url_reporte = this.getClass().getResource("/inventory/reportes/rptCompra.jasper");
            JasperReport reporte = (JasperReport) JRLoader.loadObject(url_reporte);
            HashMap parametro = new HashMap();

            //parametros generales del encabezado
            objeto_sucursal = acceso_sucursal.buscarSucursales(1, Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText());

            //parametros del reporte
            parametro.put("P_ID_COMPRA", Integer.parseInt(tblListadoEquipos.getValueAt(tblListadoEquipos.getSelectedRow(), 1).toString()));
            parametro.put("P_DIRECCION_SUCURSAL", objeto_sucursal.getDireccion_sucursal());
            parametro.put("P_NIT", objeto_sucursal.getNit_sucursal());
            parametro.put("P_NOMBRE_EMPRESA", objeto_sucursal.getNombre_sucursal());
            parametro.put("P_SUCURSAL", objeto_sucursal.getDescripcion_sucursal());
            parametro.put("P_TELEFONO", objeto_sucursal.getTelefonos_sucursal());

            //parametros facturación FEL implementarlos solo si se desea
            //obtener facturacion electronica de la venta realizada
            parametro.put("P_SERIE_FEL", txtSerie.getText());
            parametro.put("P_NUMERO_FEL", txtNumero.getText());
            parametro.put("P_AUTORIZACION_FEL", txtAutorizacion.getText());

            JasperPrint pantalla = JasperFillManager.fillReport(reporte, parametro, acceso_inventario.conectar());
            JInternalFrame ventana = new JInternalFrame("Inventory 3.0");
            ventana.getContentPane().add(new JRViewer(pantalla));
            ventana.setPreferredSize(new Dimension(900, 500));
            ventana.setClosable(true);
            ventana.setMaximizable(true);
            ventana.setResizable(true);
            ventana.setVisible(true);
            ventana.pack();

            int ancho = java.awt.Toolkit.getDefaultToolkit().getScreenSize().width;
            int alto = java.awt.Toolkit.getDefaultToolkit().getScreenSize().height;
            int x = (ancho - ventana.getWidth()) / 2;
            int y = (alto - ventana.getHeight() - 100) / 2;

            Inventory.pnlPrincipal.add(ventana);

            ventana.setLocation(x, y);
            ventana.setVisible(true);
            ventana.toFront();

        } catch (JRException error) {
            Mensaje.manipulacionExcepciones("critico", error.getMessage(), "Reporte de Compra");
        }

    }//GEN-LAST:event_btnReporteActionPerformed

    private void btnReporte2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReporte2ActionPerformed

        String archivo_jasper = "";
        String regimen_empresa = "";

        //El mensaje del regimen de la factura se toma del archivo de texto
        try {
            regimen_empresa = archivo.leer("[Regimen]");
        } catch (IOException ex) {
            regimen_empresa = "";
        }

        //ejecución del repote seleccionado
        try {

            AccesoInventario acceso_inventario = new AccesoInventario();
            AccesoSucursal acceso_sucursal = new AccesoSucursal();
            ObjetosSucursal objeto_sucursal = new ObjetosSucursal();

            URL url_reporte = this.getClass().getResource("/inventory/reportes/rptFacturaCarta.jasper");
            JasperReport reporte = (JasperReport) JRLoader.loadObject(url_reporte);
            HashMap parametro = new HashMap();

            //parametros generales del encabezado
            objeto_sucursal = acceso_sucursal.buscarSucursales(1, Inventory.lblUsuario.getText(), Inventory.lblTerminal.getText());

            //parametros del reporte
            parametro.put("P_SERIE_FACTURA", "");
            parametro.put("P_NUMERO_FACTURA", "");
            parametro.put("P_ID_FACTURA", Integer.parseInt(tblListadoEquipos.getValueAt(tblListadoEquipos.getSelectedRow(), 3).toString()));
            parametro.put("P_DIRECCION_SUCURSAL", objeto_sucursal.getDireccion_sucursal());
            parametro.put("P_NIT", objeto_sucursal.getNit_sucursal());
            parametro.put("P_NOMBRE_EMPRESA", objeto_sucursal.getNombre_sucursal());
            parametro.put("P_SUCURSAL", objeto_sucursal.getDescripcion_sucursal());
            parametro.put("P_TELEFONO", objeto_sucursal.getTelefonos_sucursal());

            //parametros configuracion sistema
            parametro.put("P_REGIMEN_EMPRESA", regimen_empresa);

            //parametro para la impresión de vales
            parametro.put("P_RECIBIDO", "");

            //parametros facturación FEL implementarlos solo si se desea
            //obtener facturacion electronica de la venta realizada
            parametro.put("P_SERIE_FEL", "");
            parametro.put("P_NUMERO_FEL", "");
            parametro.put("P_AUTORIZACION_FEL", "");

            JasperPrint pantalla = JasperFillManager.fillReport(reporte, parametro, acceso_inventario.conectar());
            JInternalFrame ventana = new JInternalFrame("Inventory 3.0");
            ventana.getContentPane().add(new JRViewer(pantalla));
            ventana.setPreferredSize(new Dimension(900, 500));
            ventana.setClosable(true);
            ventana.setMaximizable(true);
            ventana.setResizable(true);
            ventana.setVisible(true);
            ventana.pack();

            int ancho = java.awt.Toolkit.getDefaultToolkit().getScreenSize().width;
            int alto = java.awt.Toolkit.getDefaultToolkit().getScreenSize().height;
            int x = (ancho - ventana.getWidth()) / 2;
            int y = (alto - ventana.getHeight() - 100) / 2;

            Inventory.pnlPrincipal.add(ventana);

            ventana.setLocation(x, y);
            ventana.setVisible(true);
            ventana.toFront();

        } catch (JRException error) {
            Mensaje.manipulacionExcepciones("critico", error.getMessage(), "Reporte " + archivo_jasper.replaceAll("rpt", "").toUpperCase());
        }

    }//GEN-LAST:event_btnReporte2ActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarEnComentarios;
    private javax.swing.JButton btnBuscarProducto;
    private javax.swing.JButton btnBuscarSerie;
    private javax.swing.JButton btnConsultarOrdenServicio;
    private javax.swing.JButton btnReporte;
    private javax.swing.JButton btnReporte1;
    private javax.swing.JButton btnReporte2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel pnlDetalle;
    private javax.swing.JPanel pnlDetalleSerie;
    private javax.swing.JPanel pnlEncabezado;
    public static javax.swing.JTable tblComponentes;
    public static javax.swing.JTable tblListadoEquipos;
    private javax.swing.JTextField txtAutorizacion;
    public static javax.swing.JTextField txtDescripcionProducto;
    public static javax.swing.JTextField txtIdProducto;
    private javax.swing.JTextField txtNumero;
    private javax.swing.JTextField txtSerie;
    private javax.swing.JTextField txtSerieProducto;
    // End of variables declaration//GEN-END:variables
}
